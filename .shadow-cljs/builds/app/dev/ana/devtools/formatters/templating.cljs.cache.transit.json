["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.templating');\ngoog.require('cljs.core');\ngoog.require('clojure.walk');\ngoog.require('devtools.util');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.state');\ngoog.require('clojure.string');\ndevtools.formatters.templating.mark_as_group_BANG_ = (function devtools$formatters$templating$mark_as_group_BANG_(value){\nvar x46280_46455 = value;\nx46280_46455.devtools$protocols$IGroup$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.group_QMARK_ = (function devtools$formatters$templating$group_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IGroup$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n}\n});\ndevtools.formatters.templating.mark_as_template_BANG_ = (function devtools$formatters$templating$mark_as_template_BANG_(value){\nvar x46308_46464 = value;\nx46308_46464.devtools$protocols$ITemplate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.template_QMARK_ = (function devtools$formatters$templating$template_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ITemplate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n}\n});\ndevtools.formatters.templating.mark_as_surrogate_BANG_ = (function devtools$formatters$templating$mark_as_surrogate_BANG_(value){\nvar x46310_46465 = value;\nx46310_46465.devtools$protocols$ISurrogate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.surrogate_QMARK_ = (function devtools$formatters$templating$surrogate_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ISurrogate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n}\n});\ndevtools.formatters.templating.reference_QMARK_ = (function devtools$formatters$templating$reference_QMARK_(value){\nreturn ((devtools.formatters.templating.group_QMARK_(value)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((value[(0)]),\"object\")));\n});\ndevtools.formatters.templating.make_group = (function devtools$formatters$templating$make_group(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46477 = arguments.length;\nvar i__4731__auto___46478 = (0);\nwhile(true){\nif((i__4731__auto___46478 < len__4730__auto___46477)){\nargs__4736__auto__.push((arguments[i__4731__auto___46478]));\n\nvar G__46479 = (i__4731__auto___46478 + (1));\ni__4731__auto___46478 = G__46479;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic = (function (items){\nvar group = devtools.formatters.templating.mark_as_group_BANG_([]);\nvar seq__46315_46480 = cljs.core.seq(items);\nvar chunk__46316_46481 = null;\nvar count__46317_46482 = (0);\nvar i__46318_46483 = (0);\nwhile(true){\nif((i__46318_46483 < count__46317_46482)){\nvar item_46484 = chunk__46316_46481.cljs$core$IIndexed$_nth$arity$2(null,i__46318_46483);\nif((!((item_46484 == null)))){\nif(cljs.core.coll_QMARK_(item_46484)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_46484)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_46484));\n}\n} else {\n}\n\n\nvar G__46487 = seq__46315_46480;\nvar G__46488 = chunk__46316_46481;\nvar G__46489 = count__46317_46482;\nvar G__46490 = (i__46318_46483 + (1));\nseq__46315_46480 = G__46487;\nchunk__46316_46481 = G__46488;\ncount__46317_46482 = G__46489;\ni__46318_46483 = G__46490;\ncontinue;\n} else {\nvar temp__5735__auto___46493 = cljs.core.seq(seq__46315_46480);\nif(temp__5735__auto___46493){\nvar seq__46315_46494__$1 = temp__5735__auto___46493;\nif(cljs.core.chunked_seq_QMARK_(seq__46315_46494__$1)){\nvar c__4550__auto___46496 = cljs.core.chunk_first(seq__46315_46494__$1);\nvar G__46497 = cljs.core.chunk_rest(seq__46315_46494__$1);\nvar G__46498 = c__4550__auto___46496;\nvar G__46499 = cljs.core.count(c__4550__auto___46496);\nvar G__46500 = (0);\nseq__46315_46480 = G__46497;\nchunk__46316_46481 = G__46498;\ncount__46317_46482 = G__46499;\ni__46318_46483 = G__46500;\ncontinue;\n} else {\nvar item_46501 = cljs.core.first(seq__46315_46494__$1);\nif((!((item_46501 == null)))){\nif(cljs.core.coll_QMARK_(item_46501)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_46501)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_46501));\n}\n} else {\n}\n\n\nvar G__46502 = cljs.core.next(seq__46315_46494__$1);\nvar G__46503 = null;\nvar G__46504 = (0);\nvar G__46505 = (0);\nseq__46315_46480 = G__46502;\nchunk__46316_46481 = G__46503;\ncount__46317_46482 = G__46504;\ni__46318_46483 = G__46505;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn group;\n});\n\ndevtools.formatters.templating.make_group.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_group.cljs$lang$applyTo = (function (seq46314){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq46314));\n});\n\ndevtools.formatters.templating.make_template = (function devtools$formatters$templating$make_template(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46507 = arguments.length;\nvar i__4731__auto___46508 = (0);\nwhile(true){\nif((i__4731__auto___46508 < len__4730__auto___46507)){\nargs__4736__auto__.push((arguments[i__4731__auto___46508]));\n\nvar G__46510 = (i__4731__auto___46508 + (1));\ni__4731__auto___46508 = G__46510;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic = (function (tag,style,children){\nvar tag__$1 = devtools.formatters.helpers.pref(tag);\nvar style__$1 = devtools.formatters.helpers.pref(style);\nvar template = devtools.formatters.templating.mark_as_template_BANG_([tag__$1,((cljs.core.empty_QMARK_(style__$1))?({}):({\"style\": style__$1}))]);\nvar seq__46329_46512 = cljs.core.seq(children);\nvar chunk__46330_46513 = null;\nvar count__46331_46514 = (0);\nvar i__46332_46515 = (0);\nwhile(true){\nif((i__46332_46515 < count__46331_46514)){\nvar child_46516 = chunk__46330_46513.cljs$core$IIndexed$_nth$arity$2(null,i__46332_46515);\nif((!((child_46516 == null)))){\nif(cljs.core.coll_QMARK_(child_46516)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_46516))));\n} else {\nvar temp__5733__auto___46517 = devtools.formatters.helpers.pref(child_46516);\nif(cljs.core.truth_(temp__5733__auto___46517)){\nvar child_value_46518 = temp__5733__auto___46517;\ntemplate.push(child_value_46518);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__46525 = seq__46329_46512;\nvar G__46526 = chunk__46330_46513;\nvar G__46527 = count__46331_46514;\nvar G__46528 = (i__46332_46515 + (1));\nseq__46329_46512 = G__46525;\nchunk__46330_46513 = G__46526;\ncount__46331_46514 = G__46527;\ni__46332_46515 = G__46528;\ncontinue;\n} else {\nvar temp__5735__auto___46536 = cljs.core.seq(seq__46329_46512);\nif(temp__5735__auto___46536){\nvar seq__46329_46537__$1 = temp__5735__auto___46536;\nif(cljs.core.chunked_seq_QMARK_(seq__46329_46537__$1)){\nvar c__4550__auto___46539 = cljs.core.chunk_first(seq__46329_46537__$1);\nvar G__46545 = cljs.core.chunk_rest(seq__46329_46537__$1);\nvar G__46546 = c__4550__auto___46539;\nvar G__46547 = cljs.core.count(c__4550__auto___46539);\nvar G__46548 = (0);\nseq__46329_46512 = G__46545;\nchunk__46330_46513 = G__46546;\ncount__46331_46514 = G__46547;\ni__46332_46515 = G__46548;\ncontinue;\n} else {\nvar child_46549 = cljs.core.first(seq__46329_46537__$1);\nif((!((child_46549 == null)))){\nif(cljs.core.coll_QMARK_(child_46549)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_46549))));\n} else {\nvar temp__5733__auto___46554 = devtools.formatters.helpers.pref(child_46549);\nif(cljs.core.truth_(temp__5733__auto___46554)){\nvar child_value_46556 = temp__5733__auto___46554;\ntemplate.push(child_value_46556);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__46557 = cljs.core.next(seq__46329_46537__$1);\nvar G__46558 = null;\nvar G__46559 = (0);\nvar G__46560 = (0);\nseq__46329_46512 = G__46557;\nchunk__46330_46513 = G__46558;\ncount__46331_46514 = G__46559;\ni__46332_46515 = G__46560;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn template;\n});\n\ndevtools.formatters.templating.make_template.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_template.cljs$lang$applyTo = (function (seq46326){\nvar G__46327 = cljs.core.first(seq46326);\nvar seq46326__$1 = cljs.core.next(seq46326);\nvar G__46328 = cljs.core.first(seq46326__$1);\nvar seq46326__$2 = cljs.core.next(seq46326__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46327,G__46328,seq46326__$2);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_ = (function devtools$formatters$templating$concat_templates_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46569 = arguments.length;\nvar i__4731__auto___46570 = (0);\nwhile(true){\nif((i__4731__auto___46570 < len__4730__auto___46569)){\nargs__4736__auto__.push((arguments[i__4731__auto___46570]));\n\nvar G__46573 = (i__4731__auto___46570 + (1));\ni__4731__auto___46570 = G__46573;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,templates){\nreturn devtools.formatters.templating.mark_as_template_BANG_((template[\"concat\"]).apply(template,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.into_array,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,templates)))));\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$applyTo = (function (seq46344){\nvar G__46345 = cljs.core.first(seq46344);\nvar seq46344__$1 = cljs.core.next(seq46344);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46345,seq46344__$1);\n});\n\ndevtools.formatters.templating.extend_template_BANG_ = (function devtools$formatters$templating$extend_template_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46595 = arguments.length;\nvar i__4731__auto___46596 = (0);\nwhile(true){\nif((i__4731__auto___46596 < len__4730__auto___46595)){\nargs__4736__auto__.push((arguments[i__4731__auto___46596]));\n\nvar G__46597 = (i__4731__auto___46596 + (1));\ni__4731__auto___46596 = G__46597;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,args){\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic(template,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$applyTo = (function (seq46347){\nvar G__46348 = cljs.core.first(seq46347);\nvar seq46347__$1 = cljs.core.next(seq46347);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46348,seq46347__$1);\n});\n\ndevtools.formatters.templating.make_surrogate = (function devtools$formatters$templating$make_surrogate(var_args){\nvar G__46352 = arguments.length;\nswitch (G__46352) {\ncase 1:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1 = (function (object){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2(object,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2 = (function (object,header){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3(object,header,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3 = (function (object,header,body){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4(object,header,body,(0));\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4 = (function (object,header,body,start_index){\nreturn devtools.formatters.templating.mark_as_surrogate_BANG_((function (){var obj46354 = ({\"target\":object,\"header\":header,\"body\":body,\"startIndex\":(function (){var or__4131__auto__ = start_index;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (0);\n}\n})()});\nreturn obj46354;\n})());\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$lang$maxFixedArity = 4;\n\ndevtools.formatters.templating.get_surrogate_target = (function devtools$formatters$templating$get_surrogate_target(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"target\"]);\n});\ndevtools.formatters.templating.get_surrogate_header = (function devtools$formatters$templating$get_surrogate_header(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"header\"]);\n});\ndevtools.formatters.templating.get_surrogate_body = (function devtools$formatters$templating$get_surrogate_body(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"body\"]);\n});\ndevtools.formatters.templating.get_surrogate_start_index = (function devtools$formatters$templating$get_surrogate_start_index(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"startIndex\"]);\n});\ndevtools.formatters.templating.make_reference = (function devtools$formatters$templating$make_reference(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46642 = arguments.length;\nvar i__4731__auto___46643 = (0);\nwhile(true){\nif((i__4731__auto___46643 < len__4730__auto___46642)){\nargs__4736__auto__.push((arguments[i__4731__auto___46643]));\n\nvar G__46644 = (i__4731__auto___46643 + (1));\ni__4731__auto___46643 = G__46644;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic = (function (object,p__46359){\nvar vec__46360 = p__46359;\nvar state_override_fn = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46360,(0),null);\nif((((state_override_fn == null)) || (cljs.core.fn_QMARK_(state_override_fn)))){\n} else {\nthrow (new Error(\"Assert failed: (or (nil? state-override-fn) (fn? state-override-fn))\"));\n}\n\nif((object == null)){\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.Keyword(null,\"nil-style\",\"nil-style\",-1505044832),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], 0));\n} else {\nvar sub_state = (((!((state_override_fn == null))))?(function (){var G__46363 = devtools.formatters.state.get_current_state();\nreturn (state_override_fn.cljs$core$IFn$_invoke$arity$1 ? state_override_fn.cljs$core$IFn$_invoke$arity$1(G__46363) : state_override_fn.call(null,G__46363));\n})():devtools.formatters.state.get_current_state());\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"object\",({\"object\": object, \"config\": sub_state})], 0));\n}\n});\n\ndevtools.formatters.templating.make_reference.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_reference.cljs$lang$applyTo = (function (seq46357){\nvar G__46358 = cljs.core.first(seq46357);\nvar seq46357__$1 = cljs.core.next(seq46357);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46358,seq46357__$1);\n});\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating.print_preview = (function devtools$formatters$templating$print_preview(markup){\nvar _STAR_print_level_STAR__orig_val__46368 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__46369 = (1);\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__46369;\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([markup], 0));\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__46368;\n}});\ndevtools.formatters.templating.add_stack_separators = (function devtools$formatters$templating$add_stack_separators(stack){\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\"-------------\",stack);\n});\ndevtools.formatters.templating.replace_fns_with_markers = (function devtools$formatters$templating$replace_fns_with_markers(stack){\nvar f = (function (v){\nif(cljs.core.fn_QMARK_(v)){\nreturn \"##fn##\";\n} else {\nreturn v;\n}\n});\nreturn clojure.walk.prewalk(f,stack);\n});\ndevtools.formatters.templating.pprint_render_calls = (function devtools$formatters$templating$pprint_render_calls(stack){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.pprint_str,stack);\n});\ndevtools.formatters.templating.pprint_render_stack = (function devtools$formatters$templating$pprint_render_stack(stack){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",devtools.formatters.templating.add_stack_separators(devtools.formatters.templating.pprint_render_calls(devtools.formatters.templating.replace_fns_with_markers(cljs.core.reverse(stack)))));\n});\ndevtools.formatters.templating.pprint_render_path = (function devtools$formatters$templating$pprint_render_path(path){\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n});\ndevtools.formatters.templating.assert_markup_error = (function devtools$formatters$templating$assert_markup_error(msg){\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"\\n\",\"Render path: \",devtools.formatters.templating.pprint_render_path(devtools.formatters.templating._STAR_current_render_path_STAR_),\"\\n\",\"Render stack:\\n\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.pprint_render_stack(devtools.formatters.templating._STAR_current_render_stack_STAR_))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.surrogate_markup_QMARK_ = (function devtools$formatters$templating$surrogate_markup_QMARK_(markup){\nreturn ((cljs.core.sequential_QMARK_(markup)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(markup),\"surrogate\")));\n});\ndevtools.formatters.templating.render_special = (function devtools$formatters$templating$render_special(name,args){\nvar G__46383 = name;\nswitch (G__46383) {\ncase \"surrogate\":\nvar obj = cljs.core.first(args);\nvar converted_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_surrogate,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj], null),converted_args));\n\nbreak;\ncase \"reference\":\nvar obj = cljs.core.first(args);\nvar converted_obj = ((devtools.formatters.templating.surrogate_markup_QMARK_(obj))?(devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1 ? devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1(obj) : devtools.formatters.templating.render_json_ml_STAR_.call(null,obj)):obj);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_reference,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [converted_obj], null),cljs.core.rest(args)));\n\nbreak;\ndefault:\nreturn devtools.formatters.templating.assert_markup_error([\"no matching special tag name: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\"'\"].join(''));\n\n}\n});\ndevtools.formatters.templating.emptyish_QMARK_ = (function devtools$formatters$templating$emptyish_QMARK_(v){\nif(((cljs.core.seqable_QMARK_(v)) || (cljs.core.array_QMARK_(v)) || (typeof v === 'string'))){\nreturn cljs.core.empty_QMARK_(v);\n} else {\nreturn false;\n}\n});\ndevtools.formatters.templating.render_subtree = (function devtools$formatters$templating$render_subtree(tag,children){\nvar vec__46388 = tag;\nvar html_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46388,(0),null);\nvar style = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46388,(1),null);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_template,html_tag,style,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.emptyish_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,children))));\n});\ndevtools.formatters.templating.render_json_ml_STAR_ = (function devtools$formatters$templating$render_json_ml_STAR_(markup){\nif((!(cljs.core.sequential_QMARK_(markup)))){\nreturn markup;\n} else {\nvar _STAR_current_render_path_STAR__orig_val__46394 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_path_STAR__temp_val__46395 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,cljs.core.first(markup));\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__46395;\n\ntry{var tag = devtools.formatters.helpers.pref(cljs.core.first(markup));\nif(typeof tag === 'string'){\nreturn devtools.formatters.templating.render_special(tag,cljs.core.rest(markup));\n} else {\nif(cljs.core.sequential_QMARK_(tag)){\nreturn devtools.formatters.templating.render_subtree(tag,cljs.core.rest(markup));\n} else {\nreturn devtools.formatters.templating.assert_markup_error([\"invalid json-ml markup at \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.print_preview(markup)),\":\"].join(''));\n\n}\n}\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__46394;\n}}\n});\ndevtools.formatters.templating.render_json_ml = (function devtools$formatters$templating$render_json_ml(markup){\nvar _STAR_current_render_stack_STAR__orig_val__46399 = devtools.formatters.templating._STAR_current_render_stack_STAR_;\nvar _STAR_current_render_path_STAR__orig_val__46400 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_stack_STAR__temp_val__46401 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_stack_STAR_,markup);\nvar _STAR_current_render_path_STAR__temp_val__46402 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,\"<render-json-ml>\");\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__temp_val__46401;\n\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__46402;\n\ntry{return devtools.formatters.templating.render_json_ml_STAR_(markup);\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__46400;\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__orig_val__46399;\n}});\ndevtools.formatters.templating.assert_failed_markup_rendering = (function devtools$formatters$templating$assert_failed_markup_rendering(initial_value,value){\nthrow (new Error([\"Assert failed: \",[\"result of markup rendering must be a template,\\n\",\"resolved to \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),\"initial value: \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_value], 0))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.render_markup_STAR_ = (function devtools$formatters$templating$render_markup_STAR_(initial_value,value){\nwhile(true){\nif(cljs.core.fn_QMARK_(value)){\nvar G__46672 = initial_value;\nvar G__46673 = (value.cljs$core$IFn$_invoke$arity$0 ? value.cljs$core$IFn$_invoke$arity$0() : value.call(null));\ninitial_value = G__46672;\nvalue = G__46673;\ncontinue;\n} else {\nif((value instanceof cljs.core.Keyword)){\nvar G__46674 = initial_value;\nvar G__46675 = devtools.formatters.helpers.pref(value);\ninitial_value = G__46674;\nvalue = G__46675;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(value)){\nvar G__46676 = initial_value;\nvar G__46677 = devtools.formatters.templating.render_json_ml(value);\ninitial_value = G__46676;\nvalue = G__46677;\ncontinue;\n} else {\nif(devtools.formatters.templating.template_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.reference_QMARK_(value)){\nreturn value;\n} else {\nreturn (devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2(initial_value,value) : devtools.formatters.templating.assert_failed_markup_rendering.call(null,initial_value,value));\n\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\ndevtools.formatters.templating.render_markup = (function devtools$formatters$templating$render_markup(value){\nreturn devtools.formatters.templating.render_markup_STAR_(value,value);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/templating.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$oget","~$devtools.oops","~$oset","^N","~$ocall","^N","~$oapply","^N","~$safe-call","^N","~$unchecked-aget","^N"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.templating","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^10","~$devtools.formatters.state","^11","~$devtools.util","^12","~$cljs.core","^13","~$goog","^14","~$devtools.protocols","^15","~$string","~$clojure.string","^17","^17","~$clojure.walk","^18"],"~:seen",["^U",["~:require","~:require-macros"]],"~:uses",["^ ","~$prevent-recursion?","^11","~$IGroup","^15","~$ITemplate","^15","~$get-current-state","^11","~$ISurrogate","^15","~$pref","^10","~$prewalk","^18","~$IFormat","^15","~$pprint-str","^12","~$cljs-value?","^10"],"^1;",["^ ","^N","^N","^13","^13"],"~:form",["~#list",["~$ns","^W",["^1H",["^1;",["^N","~:refer",["^M","^O","^P","^Q","^R","^S"]]]],["^1H",["^1:",["^18","^1J",["^1C"]],["^12","^1J",["^1E"]],["^15","^1J",["^1?","^1>","^1A","^1D"]],["^10","^1J",["^1B","^1F"]],["^11","^1J",["^1@","^1="]],["^17","~:as","^16"]]]]],"~:flags",["^ ","^1;",["^U",[]],"^1:",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^18","^12","^15","^10","^11","^17"]],"^Y","^W","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/templating.cljs"],"~:compiled-at",1569333891857,"~:resource-name","devtools/formatters/templating.cljs","~:warnings",[],"~:source","(ns devtools.formatters.templating\n  (:require-macros [devtools.oops :refer [oget oset ocall oapply safe-call unchecked-aget]])\n  (:require [clojure.walk :refer [prewalk]]\n            [devtools.util :refer [pprint-str]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.helpers :refer [pref cljs-value?]]\n            [devtools.formatters.state :refer [get-current-state prevent-recursion?]]\n            [clojure.string :as string]))\n\n; -- object marking support -------------------------------------------------------------------------------------------------\n\n(defn mark-as-group! [value]\n  (specify! value IGroup)\n  value)\n\n(defn group? [value]\n  (satisfies? IGroup value))\n\n(defn mark-as-template! [value]\n  (specify! value ITemplate)\n  value)\n\n(defn template? [value]\n  (satisfies? ITemplate value))\n\n(defn mark-as-surrogate! [value]\n  (specify! value ISurrogate)\n  value)\n\n(defn surrogate? [value]\n  (satisfies? ISurrogate value))\n\n(defn reference? [value]\n  (and (group? value)\n       (= (unchecked-aget value 0) \"object\")))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn make-group [& items]\n  (let [group (mark-as-group! #js [])]\n    (doseq [item items]\n      (if (some? item)\n        (if (coll? item)\n          (.apply (unchecked-aget group \"push\") group (mark-as-group! (into-array item)))                                               ; convenience helper to splat cljs collections\n          (.push group (pref item)))))\n    group))\n\n(defn make-template\n  [tag style & children]\n  (let [tag (pref tag)\n        style (pref style)\n        template (mark-as-template! #js [tag (if (empty? style)\n                                               #js {}\n                                               #js {\"style\" style})])]\n    (doseq [child children]\n      (if (some? child)\n        (if (coll? child)\n          (.apply (unchecked-aget template \"push\") template (mark-as-template! (into-array (keep pref child))))                         ; convenience helper to splat cljs collections\n          (if-let [child-value (pref child)]\n            (.push template child-value)))))\n    template))\n\n(defn concat-templates! [template & templates]\n  (mark-as-template! (.apply (oget template \"concat\") template (into-array (map into-array (keep pref templates))))))\n\n(defn extend-template! [template & args]\n  (concat-templates! template args))\n\n(defn make-surrogate\n  ; passing :target as body means that targt object body should be rendered using standard templates\n  ; see <surrogate-body> in markup.cljs\n  ([object] (make-surrogate object nil))\n  ([object header] (make-surrogate object header nil))\n  ([object header body] (make-surrogate object header body 0))\n  ([object header body start-index]\n   (mark-as-surrogate! (js-obj\n                         \"target\" object\n                         \"header\" header\n                         \"body\" body\n                         \"startIndex\" (or start-index 0)))))\n\n(defn get-surrogate-target [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"target\"))\n\n(defn get-surrogate-header [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"header\"))\n\n(defn get-surrogate-body [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"body\"))\n\n(defn get-surrogate-start-index [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"startIndex\"))\n\n(defn make-reference [object & [state-override-fn]]\n  {:pre [(or (nil? state-override-fn) (fn? state-override-fn))]}\n  (if (nil? object)\n    ; this code is duplicated in markup.cljs <nil>\n    (make-template :span :nil-style :nil-label)\n    (let [sub-state (if (some? state-override-fn)\n                      (state-override-fn (get-current-state))\n                      (get-current-state))]\n      (make-group \"object\" #js {\"object\" object\n                                \"config\" sub-state}))))\n\n; -- JSON ML support --------------------------------------------------------------------------------------------------------\n\n; a renderer from hiccup-like data markup to json-ml\n;\n; [[tag style] child1 child2 ...] -> #js [tag #js {\"style\" ...} child1 child2 ...]\n;\n\n(declare render-json-ml*)\n\n(def ^:dynamic *current-render-stack* [])\n(def ^:dynamic *current-render-path* [])\n\n(defn print-preview [markup]\n  (binding [*print-level* 1]\n    (pr-str markup)))\n\n(defn add-stack-separators [stack]\n  (interpose \"-------------\" stack))\n\n(defn replace-fns-with-markers [stack]\n  (let [f (fn [v]\n            (if (fn? v)\n              \"##fn##\"\n              v))]\n    (prewalk f stack)))\n\n(defn pprint-render-calls [stack]\n  (map pprint-str stack))\n\n(defn pprint-render-stack [stack]\n  (string/join \"\\n\" (-> stack\n                        reverse\n                        replace-fns-with-markers\n                        pprint-render-calls\n                        add-stack-separators)))\n\n(defn pprint-render-path [path]\n  (pprint-str path))\n\n(defn assert-markup-error [msg]\n  (assert false (str msg \"\\n\"\n                     \"Render path: \" (pprint-render-path *current-render-path*) \"\\n\"\n                     \"Render stack:\\n\"\n                     (pprint-render-stack *current-render-stack*))))\n\n(defn surrogate-markup? [markup]\n  (and (sequential? markup) (= (first markup) \"surrogate\")))\n\n(defn render-special [name args]\n  (case name\n    \"surrogate\" (let [obj (first args)\n                      converted-args (map render-json-ml* (rest args))]\n                  (apply make-surrogate (concat [obj] converted-args)))\n    \"reference\" (let [obj (first args)\n                      converted-obj (if (surrogate-markup? obj) (render-json-ml* obj) obj)]\n                  (apply make-reference (concat [converted-obj] (rest args))))\n    (assert-markup-error (str \"no matching special tag name: '\" name \"'\"))))\n\n(defn emptyish? [v]\n  (if (or (seqable? v) (array? v) (string? v))\n    (empty? v)\n    false))\n\n(defn render-subtree [tag children]\n  (let [[html-tag style] tag]\n    (apply make-template html-tag style (map render-json-ml* (remove emptyish? (map pref children))))))\n\n(defn render-json-ml* [markup]\n  (if-not (sequential? markup)\n    markup\n    (binding [*current-render-path* (conj *current-render-path* (first markup))]\n      (let [tag (pref (first markup))]\n        (cond\n          (string? tag) (render-special tag (rest markup))\n          (sequential? tag) (render-subtree tag (rest markup))\n          :else (assert-markup-error (str \"invalid json-ml markup at \" (print-preview markup) \":\")))))))\n\n(defn render-json-ml [markup]\n  (binding [*current-render-stack* (conj *current-render-stack* markup)\n            *current-render-path* (conj *current-render-path* \"<render-json-ml>\")]\n    (render-json-ml* markup)))\n\n; -- template rendering -----------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic assert-failed-markup-rendering [initial-value value]\n  (assert false (str \"result of markup rendering must be a template,\\n\"\n                     \"resolved to \" (pprint-str value)\n                     \"initial value: \" (pprint-str initial-value))))\n\n(defn render-markup* [initial-value value]\n  (cond\n    (fn? value) (recur initial-value (value))\n    (keyword? value) (recur initial-value (pref value))\n    (sequential? value) (recur initial-value (render-json-ml value))\n    (template? value) value\n    (surrogate? value) value\n    (reference? value) value\n    :else (assert-failed-markup-rendering initial-value value)))\n\n(defn render-markup [value]\n  (render-markup* value value))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.templating/mark-as-group!","value","x46280","cljs.core/PROTOCOL_SENTINEL","devtools.formatters.templating/group?","cljs.core/native-satisfies?","devtools.protocols/IGroup","devtools.formatters.templating/mark-as-template!","x46308","devtools.formatters.templating/template?","devtools.protocols/ITemplate","devtools.formatters.templating/mark-as-surrogate!","x46310","devtools.formatters.templating/surrogate?","devtools.protocols/ISurrogate","devtools.formatters.templating/reference?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.templating/make-group","seq46314","self__4718__auto__","cljs.core/seq","items","group","seq__46315","chunk__46316","count__46317","i__46318","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","item","cljs.core/coll?","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","devtools.formatters.helpers/pref","devtools.formatters.templating/make-template","seq46326","G__46327","G__46328","self__4717__auto__","tag","style","children","template","cljs.core/empty?","seq__46329","chunk__46330","count__46331","i__46332","child","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","temp__5733__auto__","child-value","devtools.formatters.templating/concat-templates!","seq46344","G__46345","templates","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/into-array","devtools.formatters.templating/extend-template!","seq46347","G__46348","args","devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic","G__46352","devtools.formatters.templating/make-surrogate","js/Error","object","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2","header","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3","body","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4","start-index","obj46354","or__4131__auto__","devtools.formatters.templating/get-surrogate-target","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-body","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.templating/make-reference","p__46359","vec__46360","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq46357","G__46358","state-override-fn","cljs.core/fn?","devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic","sub-state","G__46363","devtools.formatters.state/get-current-state","devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/*current-render-stack*","devtools.formatters.templating/*current-render-path*","devtools.formatters.templating/print-preview","markup","*print-level*-orig-val__46368","*print-level*-temp-val__46369","cljs.core/*print-level*","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/add-stack-separators","stack","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/replace-fns-with-markers","f","v","clojure.walk/prewalk","devtools.formatters.templating/pprint-render-calls","devtools.util/pprint-str","devtools.formatters.templating/pprint-render-stack","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core/reverse","devtools.formatters.templating/pprint-render-path","path","devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/assert-markup-error","msg","devtools.formatters.templating/surrogate-markup?","cljs.core/sequential?","devtools.formatters.templating/render-special","name","G__46383","obj","converted-args","devtools.formatters.templating/render-json-ml*","cljs.core/rest","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","converted-obj","devtools.formatters.templating/emptyish?","cljs.core/seqable?","cljs.core/array?","devtools.formatters.templating/render-subtree","vec__46388","html-tag","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","*current-render-path*-orig-val__46394","*current-render-path*-temp-val__46395","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/render-json-ml","*current-render-stack*-orig-val__46399","*current-render-path*-orig-val__46400","*current-render-stack*-temp-val__46401","*current-render-path*-temp-val__46402","devtools.formatters.templating/assert-failed-markup-rendering","initial-value","devtools.formatters.templating/render-markup*","cljs.core/Keyword","devtools.formatters.templating/render-markup"]]],"~:cache-keys",["~#cmap",[["^1P","goog/labs/useragent/platform.js"],[1561895386000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^1P","devtools/formatters/helpers.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","~$devtools.prefs","~$devtools.munging","~$devtools.format","^15"]]],["^1P","goog/math/math.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","~$goog.array","~$goog.asserts"]]],["^1P","goog/labs/useragent/browser.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^25","~$goog.object","~$goog.string.internal"]]],["^1P","goog/array/array.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2;"]]],["^1P","goog/useragent/useragent.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^25","~$goog.reflect","^26"]]],["^1P","devtools/formatters/templating.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","^18","^12","^15","^10","^11","^17"]]],["^1P","goog/debug/error.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","goog/dom/nodetype.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","cljs/pprint.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","^17","^26","~$goog.string.StringBuffer"]]],["^1P","goog/object/object.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],"~:SHADOW-TIMESTAMP",[1569333690000,1561895393000],["^1P","goog/math/long.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2;","^2A"]]],["^1P","devtools/version.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","goog/string/internal.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","goog/functions/functions.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","devtools/prefs.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","~$devtools.defaults"]]],["^1P","clojure/walk.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","goog/structs/map.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1P","devtools/munging.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","^17","~$devtools.context","^2<","^2B"]]],["^1P","goog/labs/useragent/engine.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^25","^26"]]],["^1P","goog/asserts/asserts.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1P","goog/uri/uri.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^2;","^26","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1P","goog/base.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",[]]],["^1P","goog/structs/structs.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^2<"]]],["^1P","clojure/string.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","^26","^2B"]]],["^1P","devtools/formatters/state.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","goog/string/string.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2="]]],["^1P","clojure/data.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","~$clojure.set"]]],["^1P","goog/reflect/reflect.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","goog/labs/useragent/util.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2="]]],["^1P","goog/string/stringbuffer.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","goog/iter/iter.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^2;","~$goog.functions","~$goog.math"]]],["^1P","devtools/defaults.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","cljs/core.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["~$goog.math.Long","~$goog.math.Integer","^26","^2<","^2:","~$goog.Uri","^2B"]]],["^1P","devtools/context.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","goog/math/integer.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14"]]],["^1P","devtools/format.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","^2G"]]],["^1P","clojure/set.cljs"],[1561895393000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","goog/uri/utils.js"],[1561895386000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^2:","^2;","^26"]]],["^1P","devtools/protocols.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13"]]],["^1P","devtools/util.cljs"],[1566667515000,"^21",["^ ","^22",null,"^23",["^U",[]],"^24",["^14","^13","~$goog.userAgent","~$clojure.data","~$devtools.version","^2G","^G","^27"]]]]],"~:clj-info",["^ ","jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/oops.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/prefs.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/compiler.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1561294032000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/version.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1561295360000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/munging.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1561895393000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",1,"^8",5,"^9",1,"^:",35],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",["^ ","^M","^N","^O","^N","^P","^N","^Q","^N","^R","^N","^S","^N"],"^T",["^U",[]],"^V","^W","^Z",null,"^[",["^ ","^10","^10","^11","^11","^12","^12","^13","^13","^14","^14","^15","^15","^16","^17","^17","^17","^18","^18"],"^19",["^U",["^1:","^1;"]],"~:shadow/js-access-global",["^U",["Error"]],"^1<",["^ ","^1=","^11","^1>","^15","^1?","^15","^1@","^11","^1A","^15","^1B","^10","^1C","^18","^1D","^15","^1E","^12","^1F","^10"],"~:defs",["^ ","~$make-template",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",48,"^8",7,"^9",48,"^:",20,"~:arglists",["^1H",["~$quote",["^1H",[["~$tag","~$style","~$&","~$children"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^1H",["^3[","^40","^41"]]],"^3Y",["^1H",[["^3[","^40","~$&","^41"]]],"~:arglists-meta",["^1H",[null]]]],"^V","~$devtools.formatters.templating/make-template","^6","devtools/formatters/templating.cljs","^:",20,"^42",["^ ","^43",true,"^44",2,"^45",2,"^46",[["^1H",["^3[","^40","^41"]]],"^3Y",["^1H",[["^3[","^40","~$&","^41"]]],"^47",["^1H",[null]]],"^46",[["^1H",["^3[","^40","^41"]]],"~:protocol-impl",null,"^44",2,"^47",["^1H",[null]],"^8",1,"^43",true,"~:methods",[["^ ","^44",2,"^43",true,"~:tag","~$any"]],"^7",48,"~:ret-tag","^4<","^9",48,"^45",2,"~:fn-var",true,"^3Y",["^1H",[["^3[","^40","~$&","^41"]]]],"~$mark-as-surrogate!",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",26,"^8",7,"^9",26,"^:",25,"^3Y",["^1H",["^3Z",["^1H",[["~$value"]]]]]],"^V","~$devtools.formatters.templating/mark-as-surrogate!","^6","devtools/formatters/templating.cljs","^:",25,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",26,"^9",26,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$concat-templates!",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",63,"^8",7,"^9",63,"^:",24,"^3Y",["^1H",["^3Z",["^1H",[["~$template","~$&","~$templates"]]]]],"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4C","^4D"]]],"^3Y",["^1H",[["^4C","~$&","^4D"]]],"^47",["^1H",[null]]]],"^V","~$devtools.formatters.templating/concat-templates!","^6","devtools/formatters/templating.cljs","^:",24,"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4C","^4D"]]],"^3Y",["^1H",[["^4C","~$&","^4D"]]],"^47",["^1H",[null]]],"^46",[["^1H",["^4C","^4D"]]],"^49",null,"^44",1,"^47",["^1H",[null]],"^8",1,"^43",true,"^4:",[["^ ","^44",1,"^43",true,"^4;","^4<"]],"^7",63,"^4=","^4<","^9",63,"^45",1,"^4>",true,"^3Y",["^1H",[["^4C","~$&","^4D"]]]],"~$make-reference",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",98,"^8",7,"^9",98,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["~$object","~$&",["~$state-override-fn"]]]]]],"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4G",["^4H"]]]],"^3Y",["^1H",[["^4G","~$&",["^4H"]]]],"^47",["^1H",[null]]]],"^V","~$devtools.formatters.templating/make-reference","^6","devtools/formatters/templating.cljs","^:",21,"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4G",["^4H"]]]],"^3Y",["^1H",[["^4G","~$&",["^4H"]]]],"^47",["^1H",[null]]],"^46",[["^1H",["^4G",["^4H"]]]],"^49",null,"^44",1,"^47",["^1H",[null]],"^8",1,"^43",true,"^4:",[["^ ","^44",1,"^43",true,"^4;","^4<"]],"^7",98,"^4=","^4<","^9",98,"^45",1,"^4>",true,"^3Y",["^1H",[["^4G","~$&",["^4H"]]]]],"~$make-surrogate",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",69,"^8",7,"^9",69,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["^4G"],["^4G","~$header"],["^4G","^4K","~$body"],["^4G","^4K","^4L","~$start-index"]]]]],"^42",["^ ","^43",false,"^44",4,"^45",4,"^46",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]],"^3Y",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]],"^47",["^1H",[null,null,null,null]]]],"^V","~$devtools.formatters.templating/make-surrogate","^6","devtools/formatters/templating.cljs","^:",21,"^42",["^ ","^43",false,"^44",4,"^45",4,"^46",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]],"^3Y",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]],"^47",["^1H",[null,null,null,null]]],"^46",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]],"^49",null,"^44",4,"^47",["^1H",[null,null,null,null]],"^8",1,"^43",false,"^4:",[["^ ","^44",1,"^43",false,"^4;","^4<"],["^ ","^44",2,"^43",false,"^4;","^4<"],["^ ","^44",3,"^43",false,"^4;","^4<"],["^ ","^44",4,"^43",false,"^4;","^4<"]],"^7",69,"^9",69,"^45",4,"^4>",true,"^3Y",["^1H",[["^4G"],["^4G","^4K"],["^4G","^4K","^4L"],["^4G","^4K","^4L","^4M"]]]],"~$pprint-render-path",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",145,"^8",7,"^9",145,"^:",25,"^3Y",["^1H",["^3Z",["^1H",[["~$path"]]]]]],"^V","~$devtools.formatters.templating/pprint-render-path","^6","devtools/formatters/templating.cljs","^:",25,"^46",["^1H",[["^4P"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",145,"^4=","^16","^9",145,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4P"]]]]]],"~$get-surrogate-body",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",90,"^8",7,"^9",90,"^:",25,"^3Y",["^1H",["^3Z",["^1H",[["~$surrogate"]]]]]],"^V","~$devtools.formatters.templating/get-surrogate-body","^6","devtools/formatters/templating.cljs","^:",25,"^46",["^1H",[["^4S"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",90,"^4=","^4<","^9",90,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"~$reference?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",33,"^8",7,"^9",33,"^:",17,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/reference?","^6","devtools/formatters/templating.cljs","^:",17,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",33,"^4=","~$boolean","^9",33,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$replace-fns-with-markers",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",128,"^8",7,"^9",128,"^:",31,"^3Y",["^1H",["^3Z",["^1H",[["~$stack"]]]]]],"^V","~$devtools.formatters.templating/replace-fns-with-markers","^6","devtools/formatters/templating.cljs","^:",31,"^46",["^1H",[["^4Y"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",128,"^4=","^4<","^9",128,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"~$*current-render-path*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",119,"^8",16,"^9",119,"^:",37,"~:dynamic",true],"^V","~$devtools.formatters.templating/*current-render-path*","^6","devtools/formatters/templating.cljs","^:",37,"^8",1,"^50",true,"^7",119,"^9",119,"^4;","~$cljs.core/IVector"],"~$render-subtree",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",172,"^8",7,"^9",172,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["^3[","^41"]]]]]],"^V","~$devtools.formatters.templating/render-subtree","^6","devtools/formatters/templating.cljs","^:",21,"^46",["^1H",[["^3[","^41"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",172,"^4=","^4<","^9",172,"^45",2,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^3[","^41"]]]]]],"~$emptyish?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",167,"^8",7,"^9",167,"^:",16,"^3Y",["^1H",["^3Z",["^1H",[["~$v"]]]]]],"^V","~$devtools.formatters.templating/emptyish?","^6","devtools/formatters/templating.cljs","^:",16,"^46",["^1H",[["~$v"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",167,"^4=","^4W","^9",167,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["~$v"]]]]]],"~$assert-failed-markup-rendering",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",193,"^8",17,"^9",193,"^:",47,"^50",true,"^3Y",["^1H",["^3Z",["^1H",[["~$initial-value","^4@"]]]]]],"^V","~$devtools.formatters.templating/assert-failed-markup-rendering","^6","devtools/formatters/templating.cljs","^:",47,"^46",["^1H",[["^58","^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^50",true,"^7",193,"^4=","~$clj-nil","^9",193,"^45",2,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^58","^4@"]]]]]],"~$pprint-render-calls",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",135,"^8",7,"^9",135,"^:",26,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"^V","~$devtools.formatters.templating/pprint-render-calls","^6","devtools/formatters/templating.cljs","^:",26,"^46",["^1H",[["^4Y"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",135,"^4=","~$cljs.core/LazySeq","^9",135,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"~$render-markup",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",208,"^8",7,"^9",208,"^:",20,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/render-markup","^6","devtools/formatters/templating.cljs","^:",20,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",208,"^4=",["^U",[null,"^5:"]],"^9",208,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$assert-markup-error",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",148,"^8",7,"^9",148,"^:",26,"^3Y",["^1H",["^3Z",["^1H",[["~$msg"]]]]]],"^V","~$devtools.formatters.templating/assert-markup-error","^6","devtools/formatters/templating.cljs","^:",26,"^46",["^1H",[["^5A"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",148,"^4=","^5:","^9",148,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^5A"]]]]]],"~$surrogate-markup?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",154,"^8",7,"^9",154,"^:",24,"^3Y",["^1H",["^3Z",["^1H",[["~$markup"]]]]]],"^V","~$devtools.formatters.templating/surrogate-markup?","^6","devtools/formatters/templating.cljs","^:",24,"^46",["^1H",[["^5D"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",154,"^4=","^4W","^9",154,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"~$render-markup*",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",198,"^8",7,"^9",198,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["^58","^4@"]]]]]],"^V","~$devtools.formatters.templating/render-markup*","^6","devtools/formatters/templating.cljs","^:",21,"^46",["^1H",[["^58","^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",198,"^4=",["^U",[null,"^5:"]],"^9",198,"^45",2,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^58","^4@"]]]]]],"~$add-stack-separators",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",125,"^8",7,"^9",125,"^:",27,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"^V","~$devtools.formatters.templating/add-stack-separators","^6","devtools/formatters/templating.cljs","^:",27,"^46",["^1H",[["^4Y"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",125,"^4=","^5=","^9",125,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"~$make-group",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^3Y",["^1H",["^3Z",["^1H",[["~$&","~$items"]]]]],"^42",["^ ","^43",true,"^44",0,"^45",0,"^46",[["^1H",["^5K"]]],"^3Y",["^1H",[["~$&","^5K"]]],"^47",["^1H",[null]]]],"^V","~$devtools.formatters.templating/make-group","^6","devtools/formatters/templating.cljs","^:",17,"^42",["^ ","^43",true,"^44",0,"^45",0,"^46",[["^1H",["^5K"]]],"^3Y",["^1H",[["~$&","^5K"]]],"^47",["^1H",[null]]],"^46",[["^1H",["^5K"]]],"^49",null,"^44",0,"^47",["^1H",[null]],"^8",1,"^43",true,"^4:",[["^ ","^44",0,"^43",true,"^4;","^4<"]],"^7",39,"^4=","^4<","^9",39,"^45",0,"^4>",true,"^3Y",["^1H",[["~$&","^5K"]]]],"~$get-surrogate-header",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",86,"^8",7,"^9",86,"^:",27,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"^V","~$devtools.formatters.templating/get-surrogate-header","^6","devtools/formatters/templating.cljs","^:",27,"^46",["^1H",[["^4S"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",86,"^4=","^4<","^9",86,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"~$render-json-ml*",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",176,"^8",7,"^9",176,"^:",22,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"^V","~$devtools.formatters.templating/render-json-ml*","^6","devtools/formatters/templating.cljs","^:",22,"^46",["^1H",[["^5D"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",176,"^9",176,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"~$surrogate?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",30,"^8",7,"^9",30,"^:",17,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/surrogate?","^6","devtools/formatters/templating.cljs","^:",17,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",30,"^4=","^4W","^9",30,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$render-json-ml",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",186,"^8",7,"^9",186,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"^V","~$devtools.formatters.templating/render-json-ml","^6","devtools/formatters/templating.cljs","^:",21,"^46",["^1H",[["^5D"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",186,"^9",186,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"~$*current-render-stack*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",118,"^8",16,"^9",118,"^:",38,"^50",true],"^V","~$devtools.formatters.templating/*current-render-stack*","^6","devtools/formatters/templating.cljs","^:",38,"^8",1,"^50",true,"^7",118,"^9",118,"^4;","^52"],"~$mark-as-group!",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",12,"^8",7,"^9",12,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/mark-as-group!","^6","devtools/formatters/templating.cljs","^:",21,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",12,"^9",12,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$get-surrogate-target",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",82,"^8",7,"^9",82,"^:",27,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"^V","~$devtools.formatters.templating/get-surrogate-target","^6","devtools/formatters/templating.cljs","^:",27,"^46",["^1H",[["^4S"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",82,"^4=","^4<","^9",82,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"~$get-surrogate-start-index",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"^V","~$devtools.formatters.templating/get-surrogate-start-index","^6","devtools/formatters/templating.cljs","^:",32,"^46",["^1H",[["^4S"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",94,"^4=","^4<","^9",94,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4S"]]]]]],"~$mark-as-template!",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/mark-as-template!","^6","devtools/formatters/templating.cljs","^:",24,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",19,"^9",19,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$pprint-render-stack",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",138,"^8",7,"^9",138,"^:",26,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"^V","~$devtools.formatters.templating/pprint-render-stack","^6","devtools/formatters/templating.cljs","^:",26,"^46",["^1H",[["^4Y"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",138,"^4=","~$js","^9",138,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4Y"]]]]]],"~$template?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",23,"^8",7,"^9",23,"^:",16,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/template?","^6","devtools/formatters/templating.cljs","^:",16,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",23,"^4=","^4W","^9",23,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$render-special",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",157,"^8",7,"^9",157,"^:",21,"^3Y",["^1H",["^3Z",["^1H",[["~$name","~$args"]]]]]],"^V","~$devtools.formatters.templating/render-special","^6","devtools/formatters/templating.cljs","^:",21,"^46",["^1H",[["^69","^6:"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",157,"^9",157,"^45",2,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^69","^6:"]]]]]],"~$print-preview",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",121,"^8",7,"^9",121,"^:",20,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"^V","~$devtools.formatters.templating/print-preview","^6","devtools/formatters/templating.cljs","^:",20,"^46",["^1H",[["^5D"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",121,"^9",121,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^5D"]]]]]],"~$group?",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",16,"^8",7,"^9",16,"^:",13,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"^V","~$devtools.formatters.templating/group?","^6","devtools/formatters/templating.cljs","^:",13,"^46",["^1H",[["^4@"]]],"^49",null,"^47",["^1H",[null,null]],"^8",1,"^43",false,"^7",16,"^4=","^4W","^9",16,"^45",1,"^4>",true,"^3Y",["^1H",["^3Z",["^1H",[["^4@"]]]]]],"~$extend-template!",["^ ","^3X",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",66,"^8",7,"^9",66,"^:",23,"^3Y",["^1H",["^3Z",["^1H",[["^4C","~$&","^6:"]]]]],"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4C","^6:"]]],"^3Y",["^1H",[["^4C","~$&","^6:"]]],"^47",["^1H",[null]]]],"^V","~$devtools.formatters.templating/extend-template!","^6","devtools/formatters/templating.cljs","^:",23,"^42",["^ ","^43",true,"^44",1,"^45",1,"^46",[["^1H",["^4C","^6:"]]],"^3Y",["^1H",[["^4C","~$&","^6:"]]],"^47",["^1H",[null]]],"^46",[["^1H",["^4C","^6:"]]],"^49",null,"^44",1,"^47",["^1H",[null]],"^8",1,"^43",true,"^4:",[["^ ","^44",1,"^43",true,"^4;","^4<"]],"^7",66,"^4=","^4<","^9",66,"^45",1,"^4>",true,"^3Y",["^1H",[["^4C","~$&","^6:"]]]]],"^1;",["^ ","^N","^N","^13","^13"],"~:cljs.analyzer/constants",["^ ","^19",["^U",["~:nil-style","~:else","~:nil-label","~:span"]],"~:order",["^6F","^6C","^6E","^6D"]],"^1L",["^ ","^1;",["^U",[]],"^1:",["^U",[]]],"^1M",["^ "],"^1N",["^14","^13","^18","^12","^15","^10","^11","^17"]],"^Y","^W","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^20",[["^6J","~:static-fns"],true,["^6J","~:elide-asserts"],false,["^6J","~:optimize-constants"],null,["^6J","^1S"],null,["^6J","~:external-config"],null,["^6J","~:tooling-config"],null,["^6J","~:emit-constants"],null,["^6J","~:load-tests"],null,["^6J","~:form-size-threshold"],null,["^6J","~:infer-externs"],true,["^6J","^1U"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6J","~:fn-invoke-direct"],null,["^6J","~:source-map"],"/dev/null"]]]