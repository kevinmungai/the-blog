["^ ","~:output",["^ ","~:js","goog.provide('re_com.typeahead');\ngoog.require('cljs.core');\ngoog.require('cljs.core.async');\ngoog.require('re_com.misc');\ngoog.require('re_com.util');\ngoog.require('re_com.popover');\ngoog.require('re_com.box');\ngoog.require('re_com.validate');\ngoog.require('reagent.core');\ngoog.require('goog.events.KeyCodes');\n\n/**\n * Return an initial value for the typeahead state, given `args`.\n */\nre_com.typeahead.make_typeahead_state = (function re_com$typeahead$make_typeahead_state(p__66452){\nvar map__66453 = p__66452;\nvar map__66453__$1 = (((((!((map__66453 == null))))?(((((map__66453.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66453.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66453):map__66453);\nvar args = map__66453__$1;\nvar on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149));\nvar rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118));\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\nvar immediate_model_update_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"immediate-model-update?\",\"immediate-model-update?\",-2000005618));\nvar data_source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676));\nvar suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962));\nvar debounce_delay = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"debounce-delay\",\"debounce-delay\",-608187982));\nvar model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66453__$1,new cljs.core.Keyword(null,\"model\",\"model\",331153215));\nvar external_model_value = re_com.util.deref_or_value(model);\nvar G__66461 = (function (){var c_input = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962),new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),new cljs.core.Keyword(null,\"immediate-model-update?\",\"immediate-model-update?\",-2000005618),new cljs.core.Keyword(null,\"c-search\",\"c-search\",1832536180),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232),new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),new cljs.core.Keyword(null,\"external-model\",\"external-model\",506095421),new cljs.core.Keyword(null,\"model\",\"model\",331153215)],[false,(function (){var or__4131__auto__ = suggestion_to_string;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.str;\n}\n})(),false,\"\",rigid_QMARK_,data_source,immediate_model_update_QMARK_,(re_com.typeahead.debounce.cljs$core$IFn$_invoke$arity$2 ? re_com.typeahead.debounce.cljs$core$IFn$_invoke$arity$2(c_input,debounce_delay) : re_com.typeahead.debounce.call(null,c_input,debounce_delay)),change_on_blur_QMARK_,cljs.core.PersistentVector.EMPTY,c_input,on_change,re_com.util.deref_or_value(model),re_com.util.deref_or_value(model)]);\n})();\nif(cljs.core.truth_(external_model_value)){\nreturn (re_com.typeahead.display_suggestion.cljs$core$IFn$_invoke$arity$2 ? re_com.typeahead.display_suggestion.cljs$core$IFn$_invoke$arity$2(G__66461,external_model_value) : re_com.typeahead.display_suggestion.call(null,G__66461,external_model_value));\n} else {\nreturn G__66461;\n}\n});\n/**\n * Should `event` update the `typeahead` `model`?\n */\nre_com.typeahead.event_updates_model_QMARK_ = (function re_com$typeahead$event_updates_model_QMARK_(p__66468,event){\nvar map__66469 = p__66468;\nvar map__66469__$1 = (((((!((map__66469 == null))))?(((((map__66469.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66469.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66469):map__66469);\nvar state = map__66469__$1;\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66469__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\nvar rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66469__$1,new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118));\nvar immediate_model_update_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66469__$1,new cljs.core.Keyword(null,\"immediate-model-update?\",\"immediate-model-update?\",-2000005618));\nvar change_on_blur_QMARK___$1 = re_com.util.deref_or_value(change_on_blur_QMARK_);\nvar immediate_model_update_QMARK___$1 = re_com.util.deref_or_value(immediate_model_update_QMARK_);\nvar rigid_QMARK___$1 = re_com.util.deref_or_value(rigid_QMARK_);\nvar G__66472 = event;\nvar G__66472__$1 = (((G__66472 instanceof cljs.core.Keyword))?G__66472.fqn:null);\nswitch (G__66472__$1) {\ncase \"input-text-blurred\":\nvar and__4120__auto__ = change_on_blur_QMARK___$1;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.not(rigid_QMARK___$1);\n} else {\nreturn and__4120__auto__;\n}\n\nbreak;\ncase \"suggestion-activated\":\nreturn cljs.core.not(change_on_blur_QMARK___$1);\n\nbreak;\ncase \"input-text-changed\":\nvar and__4120__auto__ = cljs.core.not(rigid_QMARK___$1);\nif(and__4120__auto__){\nvar or__4131__auto__ = cljs.core.not(change_on_blur_QMARK___$1);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn immediate_model_update_QMARK___$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\n/**\n * Should `event` cause the `input-text` value to be used to show the active suggestion?\n */\nre_com.typeahead.event_displays_suggestion_QMARK_ = (function re_com$typeahead$event_displays_suggestion_QMARK_(p__66473,event){\nvar map__66474 = p__66473;\nvar map__66474__$1 = (((((!((map__66474 == null))))?(((((map__66474.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66474.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66474):map__66474);\nvar state = map__66474__$1;\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66474__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\nvar change_on_blur_QMARK___$1 = re_com.util.deref_or_value(change_on_blur_QMARK_);\nvar G__66476 = event;\nvar G__66476__$1 = (((G__66476 instanceof cljs.core.Keyword))?G__66476.fqn:null);\nswitch (G__66476__$1) {\ncase \"suggestion-activated\":\nreturn cljs.core.not(change_on_blur_QMARK___$1);\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\n/**\n * Change the `typeahead` `model` value to `new-value`\n */\nre_com.typeahead.update_model = (function re_com$typeahead$update_model(p__66480,new_value){\nvar map__66485 = p__66480;\nvar map__66485__$1 = (((((!((map__66485 == null))))?(((((map__66485.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66485.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66485):map__66485);\nvar state = map__66485__$1;\nvar on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66485__$1,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149));\nif(cljs.core.truth_(on_change)){\n(on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(new_value) : on_change.call(null,new_value));\n} else {\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"model\",\"model\",331153215),new_value);\n});\n/**\n * Change the `input-text` `model` to the string representation of `suggestion`\n */\nre_com.typeahead.display_suggestion = (function re_com$typeahead$display_suggestion(p__66505,suggestion){\nvar map__66506 = p__66505;\nvar map__66506__$1 = (((((!((map__66506 == null))))?(((((map__66506.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66506.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66506):map__66506);\nvar state = map__66506__$1;\nvar suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66506__$1,new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962));\nvar suggestion_string = (suggestion_to_string.cljs$core$IFn$_invoke$arity$1 ? suggestion_to_string.cljs$core$IFn$_invoke$arity$1(suggestion) : suggestion_to_string.call(null,suggestion));\nvar G__66509 = state;\nif(cljs.core.truth_(suggestion_string)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__66509,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),suggestion_string,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),true], 0));\n} else {\nreturn G__66509;\n}\n});\nre_com.typeahead.clear_suggestions = (function re_com$typeahead$clear_suggestions(state){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728)], 0));\n});\n/**\n * Make the suggestion at `index` the active suggestion\n */\nre_com.typeahead.activate_suggestion_by_index = (function re_com$typeahead$activate_suggestion_by_index(p__66513,index){\nvar map__66514 = p__66513;\nvar map__66514__$1 = (((((!((map__66514 == null))))?(((((map__66514.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66514.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66514):map__66514);\nvar state = map__66514__$1;\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66514__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\nvar suggestion = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(suggestions,index);\nvar G__66517 = state;\nvar G__66517__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__66517,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728),index)\n;\nvar G__66517__$2 = (cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"suggestion-activated\",\"suggestion-activated\",316961778)))?re_com.typeahead.update_model(G__66517__$1,suggestion):G__66517__$1);\nif(cljs.core.truth_(re_com.typeahead.event_displays_suggestion_QMARK_(state,new cljs.core.Keyword(null,\"suggestion-activated\",\"suggestion-activated\",316961778)))){\nreturn re_com.typeahead.display_suggestion(G__66517__$2,suggestion);\n} else {\nreturn G__66517__$2;\n}\n});\n/**\n * Choose the suggestion at `index`\n */\nre_com.typeahead.choose_suggestion_by_index = (function re_com$typeahead$choose_suggestion_by_index(p__66521,index){\nvar map__66522 = p__66521;\nvar map__66522__$1 = (((((!((map__66522 == null))))?(((((map__66522.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66522.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66522):map__66522);\nvar state = map__66522__$1;\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66522__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\nvar suggestion = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(suggestions,index);\nreturn re_com.typeahead.clear_suggestions(re_com.typeahead.display_suggestion(re_com.typeahead.update_model(re_com.typeahead.activate_suggestion_by_index(state,index),suggestion),suggestion));\n});\nre_com.typeahead.choose_suggestion_active = (function re_com$typeahead$choose_suggestion_active(p__66524){\nvar map__66525 = p__66524;\nvar map__66525__$1 = (((((!((map__66525 == null))))?(((((map__66525.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66525.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66525):map__66525);\nvar state = map__66525__$1;\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66525__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\nvar G__66529 = state;\nif(cljs.core.truth_(suggestion_active_index)){\nreturn re_com.typeahead.choose_suggestion_by_index(G__66529,suggestion_active_index);\n} else {\nreturn G__66529;\n}\n});\nre_com.typeahead.wrap = (function re_com$typeahead$wrap(index,count){\nreturn cljs.core.mod((count + index),count);\n});\nre_com.typeahead.activate_suggestion_next = (function re_com$typeahead$activate_suggestion_next(p__66533){\nvar map__66534 = p__66533;\nvar map__66534__$1 = (((((!((map__66534 == null))))?(((((map__66534.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66534.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66534):map__66534);\nvar state = map__66534__$1;\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66534__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66534__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\nvar G__66536 = state;\nif(cljs.core.seq(suggestions)){\nreturn re_com.typeahead.activate_suggestion_by_index(G__66536,re_com.typeahead.wrap(((function (){var or__4131__auto__ = suggestion_active_index;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (-1);\n}\n})() + (1)),cljs.core.count(suggestions)));\n} else {\nreturn G__66536;\n}\n});\nre_com.typeahead.activate_suggestion_prev = (function re_com$typeahead$activate_suggestion_prev(p__66541){\nvar map__66542 = p__66541;\nvar map__66542__$1 = (((((!((map__66542 == null))))?(((((map__66542.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66542.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66542):map__66542);\nvar state = map__66542__$1;\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66542__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66542__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\nvar G__66547 = state;\nif(cljs.core.seq(suggestions)){\nreturn re_com.typeahead.activate_suggestion_by_index(G__66547,re_com.typeahead.wrap(((function (){var or__4131__auto__ = suggestion_active_index;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (0);\n}\n})() - (1)),cljs.core.count(suggestions)));\n} else {\nreturn G__66547;\n}\n});\nre_com.typeahead.reset_typeahead = (function re_com$typeahead$reset_typeahead(state){\nvar G__66551 = state;\nvar G__66551__$1 = re_com.typeahead.clear_suggestions(G__66551)\n;\nvar G__66551__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__66551__$1,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),\"\",new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),false], 0))\n;\nif(cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-changed\",\"input-text-changed\",-1906799535)))){\nreturn re_com.typeahead.update_model(G__66551__$2,null);\n} else {\nreturn G__66551__$2;\n}\n});\n/**\n * Update state when new suggestions are available\n */\nre_com.typeahead.got_suggestions = (function re_com$typeahead$got_suggestions(state,suggestions){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),suggestions,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),false,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728),null], 0));\n});\n/**\n * Update state when the `input-text` is about to lose focus.\n */\nre_com.typeahead.input_text_will_blur = (function re_com$typeahead$input_text_will_blur(p__66556){\nvar map__66557 = p__66556;\nvar map__66557__$1 = (((((!((map__66557 == null))))?(((((map__66557.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66557.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66557):map__66557);\nvar state = map__66557__$1;\nvar input_text = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66557__$1,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114));\nvar displaying_suggestion_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66557__$1,new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862));\nvar model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66557__$1,new cljs.core.Keyword(null,\"model\",\"model\",331153215));\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core.not(displaying_suggestion_QMARK_);\nif(and__4120__auto__){\nreturn re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-blurred\",\"input-text-blurred\",-501892307));\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn re_com.typeahead.update_model(state,input_text);\n} else {\nreturn re_com.typeahead.clear_suggestions(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),input_text));\n\n}\n});\n/**\n * Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n *   came from the old `data-source`.\n */\nre_com.typeahead.change_data_source = (function re_com$typeahead$change_data_source(state,data_source){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(re_com.typeahead.reset_typeahead(state),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),data_source);\n});\n/**\n * Update state when the external model value has changed.\n */\nre_com.typeahead.external_model_changed = (function re_com$typeahead$external_model_changed(state,new_value){\nreturn re_com.typeahead.clear_suggestions(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(re_com.typeahead.display_suggestion(re_com.typeahead.update_model(state,new_value),new_value),new cljs.core.Keyword(null,\"external-model\",\"external-model\",506095421),new_value));\n});\n/**\n * Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n *   (asynchronously, if `data-source` does not return a truthy value).\n */\nre_com.typeahead.search_data_source_BANG_ = (function re_com$typeahead$search_data_source_BANG_(data_source,state_atom,text){\nvar temp__5733__auto__ = (function (){var G__66562 = text;\nvar G__66563 = ((function (G__66562){\nreturn (function (p1__66560_SHARP_){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.got_suggestions,p1__66560_SHARP_);\n});})(G__66562))\n;\nreturn (data_source.cljs$core$IFn$_invoke$arity$2 ? data_source.cljs$core$IFn$_invoke$arity$2(G__66562,G__66563) : data_source.call(null,G__66562,G__66563));\n})();\nif(cljs.core.truth_(temp__5733__auto__)){\nvar return_value = temp__5733__auto__;\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.got_suggestions,return_value);\n} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_atom,cljs.core.assoc,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),true);\n}\n});\n/**\n * For every value arriving on the `c-search` channel, call `search-data-source!`.\n */\nre_com.typeahead.search_data_source_loop_BANG_ = (function re_com$typeahead$search_data_source_loop_BANG_(state_atom,c_search){\nvar c__59195__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__59195__auto__){\nreturn (function (){\nvar f__59196__auto__ = (function (){var switch__59094__auto__ = ((function (c__59195__auto__){\nreturn (function (state_66587){\nvar state_val_66588 = (state_66587[(1)]);\nif((state_val_66588 === (1))){\nvar state_66587__$1 = state_66587;\nvar statearr_66590_66834 = state_66587__$1;\n(statearr_66590_66834[(2)] = null);\n\n(statearr_66590_66834[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66588 === (2))){\nvar state_66587__$1 = state_66587;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_66587__$1,(4),c_search);\n} else {\nif((state_val_66588 === (3))){\nvar inst_66585 = (state_66587[(2)]);\nvar state_66587__$1 = state_66587;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_66587__$1,inst_66585);\n} else {\nif((state_val_66588 === (4))){\nvar inst_66572 = (state_66587[(7)]);\nvar inst_66572__$1 = (state_66587[(2)]);\nvar inst_66573 = cljs.core.deref(state_atom);\nvar inst_66574 = new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676).cljs$core$IFn$_invoke$arity$1(inst_66573);\nvar inst_66575 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",inst_66572__$1);\nvar state_66587__$1 = (function (){var statearr_66591 = state_66587;\n(statearr_66591[(8)] = inst_66574);\n\n(statearr_66591[(7)] = inst_66572__$1);\n\nreturn statearr_66591;\n})();\nif(inst_66575){\nvar statearr_66592_66838 = state_66587__$1;\n(statearr_66592_66838[(1)] = (5));\n\n} else {\nvar statearr_66593_66839 = state_66587__$1;\n(statearr_66593_66839[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66588 === (5))){\nvar inst_66574 = (state_66587[(8)]);\nvar inst_66577 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.reset_typeahead);\nvar inst_66578 = re_com.typeahead.search_data_source_BANG_(inst_66574,state_atom,\"\");\nvar state_66587__$1 = (function (){var statearr_66594 = state_66587;\n(statearr_66594[(9)] = inst_66577);\n\nreturn statearr_66594;\n})();\nvar statearr_66595_66840 = state_66587__$1;\n(statearr_66595_66840[(2)] = inst_66578);\n\n(statearr_66595_66840[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66588 === (6))){\nvar inst_66574 = (state_66587[(8)]);\nvar inst_66572 = (state_66587[(7)]);\nvar inst_66580 = re_com.typeahead.search_data_source_BANG_(inst_66574,state_atom,inst_66572);\nvar state_66587__$1 = state_66587;\nvar statearr_66596_66845 = state_66587__$1;\n(statearr_66596_66845[(2)] = inst_66580);\n\n(statearr_66596_66845[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66588 === (7))){\nvar inst_66582 = (state_66587[(2)]);\nvar state_66587__$1 = (function (){var statearr_66597 = state_66587;\n(statearr_66597[(10)] = inst_66582);\n\nreturn statearr_66597;\n})();\nvar statearr_66598_66846 = state_66587__$1;\n(statearr_66598_66846[(2)] = null);\n\n(statearr_66598_66846[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n});})(c__59195__auto__))\n;\nreturn ((function (switch__59094__auto__,c__59195__auto__){\nreturn (function() {\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__ = null;\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____0 = (function (){\nvar statearr_66599 = [null,null,null,null,null,null,null,null,null,null,null];\n(statearr_66599[(0)] = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__);\n\n(statearr_66599[(1)] = (1));\n\nreturn statearr_66599;\n});\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____1 = (function (state_66587){\nwhile(true){\nvar ret_value__59096__auto__ = (function (){try{while(true){\nvar result__59097__auto__ = switch__59094__auto__(state_66587);\nif(cljs.core.keyword_identical_QMARK_(result__59097__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59097__auto__;\n}\nbreak;\n}\n}catch (e66600){if((e66600 instanceof Object)){\nvar ex__59098__auto__ = e66600;\nvar statearr_66601_66847 = state_66587;\n(statearr_66601_66847[(5)] = ex__59098__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_66587);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e66600;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59096__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__66848 = state_66587;\nstate_66587 = G__66848;\ncontinue;\n} else {\nreturn ret_value__59096__auto__;\n}\nbreak;\n}\n});\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__ = function(state_66587){\nswitch(arguments.length){\ncase 0:\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____0.call(this);\ncase 1:\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____1.call(this,state_66587);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__.cljs$core$IFn$_invoke$arity$0 = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____0;\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__.cljs$core$IFn$_invoke$arity$1 = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto____1;\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__59095__auto__;\n})()\n;})(switch__59094__auto__,c__59195__auto__))\n})();\nvar state__59197__auto__ = (function (){var statearr_66605 = (f__59196__auto__.cljs$core$IFn$_invoke$arity$0 ? f__59196__auto__.cljs$core$IFn$_invoke$arity$0() : f__59196__auto__.call(null));\n(statearr_66605[(6)] = c__59195__auto__);\n\nreturn statearr_66605;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__59197__auto__);\n});})(c__59195__auto__))\n);\n\nreturn c__59195__auto__;\n});\n/**\n * Update state in response to `input-text` `on-change`, and put text on the `c-input` channel\n */\nre_com.typeahead.input_text_on_change_BANG_ = (function re_com$typeahead$input_text_on_change_BANG_(state_atom,new_text){\nvar map__66613 = cljs.core.deref(state_atom);\nvar map__66613__$1 = (((((!((map__66613 == null))))?(((((map__66613.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66613.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66613):map__66613);\nvar state = map__66613__$1;\nvar input_text = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66613__$1,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114));\nvar c_input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66613__$1,new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new_text,input_text)){\nreturn state;\n} else {\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(c_input,new_text);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,((function (map__66613,map__66613__$1,state,input_text,c_input){\nreturn (function (p1__66606_SHARP_){\nvar G__66620 = p1__66606_SHARP_;\nvar G__66620__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__66620,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),new_text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),false], 0))\n;\nif(cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-changed\",\"input-text-changed\",-1906799535)))){\nreturn re_com.typeahead.update_model(G__66620__$1,new_text);\n} else {\nreturn G__66620__$1;\n}\n});})(map__66613,map__66613__$1,state,input_text,c_input))\n);\n}\n});\nre_com.typeahead.input_text_on_key_down_BANG_ = (function re_com$typeahead$input_text_on_key_down_BANG_(state_atom,event){\nvar pred__66624 = cljs.core._EQ_;\nvar expr__66625 = event.which;\nif(cljs.core.truth_((pred__66624.cljs$core$IFn$_invoke$arity$2 ? pred__66624.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.UP,expr__66625) : pred__66624.call(null,goog.events.KeyCodes.UP,expr__66625)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_prev);\n} else {\nif(cljs.core.truth_((pred__66624.cljs$core$IFn$_invoke$arity$2 ? pred__66624.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.DOWN,expr__66625) : pred__66624.call(null,goog.events.KeyCodes.DOWN,expr__66625)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_next);\n} else {\nif(cljs.core.truth_((pred__66624.cljs$core$IFn$_invoke$arity$2 ? pred__66624.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.ENTER,expr__66625) : pred__66624.call(null,goog.events.KeyCodes.ENTER,expr__66625)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.choose_suggestion_active);\n} else {\nif(cljs.core.truth_((pred__66624.cljs$core$IFn$_invoke$arity$2 ? pred__66624.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.ESC,expr__66625) : pred__66624.call(null,goog.events.KeyCodes.ESC,expr__66625)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.got_suggestions,cljs.core.PersistentVector.EMPTY);\n} else {\nif(cljs.core.truth_((pred__66624.cljs$core$IFn$_invoke$arity$2 ? pred__66624.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.TAB,expr__66625) : pred__66624.call(null,goog.events.KeyCodes.TAB,expr__66625)))){\nif(cljs.core.truth_(cljs.core.not_empty(new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(state_atom))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_next);\n\nreturn event.preventDefault();\n} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.input_text_will_blur);\n}\n} else {\nreturn true;\n}\n}\n}\n}\n}\n});\nre_com.typeahead.typeahead_args_desc = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"fn\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\" supplies suggestion objects. This can either accept a single string argument (the search term), or a string and a callback. For the first case, the fn should return a collection of suggestion objects (which can be anything). For the second case, the fn should return \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"nil\"], null),\", and eventually result in a call to the callback with a collection of suggestion objects.\"], null)], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),null,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string -> nil\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":change-on-blur?\"], null),\" controls when it is called. It is passed a suggestion object.\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"when true, invoke \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":on-change\"], null),\" when the user chooses a suggestion, otherwise invoke it on every change (navigating through suggestions with the mouse or keyboard, or if \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"rigid?\"], null),\" is also \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"false\"], null),\", invoke it on every character typed.)\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"immediate-model-update?\",\"immediate-model-update?\",-2000005618),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"update model with currently entered text on every keystroke (similar to \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":change-on-blur?\"], null),\" but no changes to model if mouse is over suggestions)\"], null)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"model\",\"model\",331153215),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),null,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"object | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"the initial value of the typeahead (should match the suggestion objects returned by \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\").\"]),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"debounce-delay\",\"debounce-delay\",-608187982),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(250),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"integer\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.integer_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"after receiving input, the typeahead will wait this many milliseconds without receiving new input before calling \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\".\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"render-suggestion\",\"render-suggestion\",1472406503),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"render fn\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"override the rendering of the suggestion items by passing a fn that returns hiccup forms. The fn will receive two arguments: the search term, and the suggestion object.\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"suggestion -> string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"when a suggestion is chosen, the input-text value will be set to the result of calling this fn with the suggestion object.\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"If \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"false\"], null),\" the user will be allowed to choose arbitrary text input rather than a suggestion from \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\". In this case, a string will be supplied in lieu of a suggestion object.\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"keyword\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.input_status_type_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"validation status. \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"nil/omitted\"], null),\" for normal status or one of: \",re_com.validate.input_status_types_list], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"when true, display an icon to match \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":status\"], null),\" (no icon for nil)\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"displayed in status icon's tooltip\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"background text shown when empty\"], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"width\",\"width\",-384071477),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),\"250px\",new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"standard CSS width setting for this input\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"standard CSS height setting for this input\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"if true, the user can't interact (input anything)\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"CSS class names, space separated (applies to the textbox)\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"CSS style map\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.css_style_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"CSS styles to add or override (applies to the textbox)\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"HTML attr map\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.html_attr_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"HTML attributes, like \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":on-mouse-move\"], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"br\",\"br\",934104792)], null),\"No \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":class\"], null),\" or \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":style\"], null),\"allowed (applies to \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span.bold\",\"span.bold\",636457745),\"the outer container\"], null),\", rather than the textbox)\"], null)], null)], null);\n/**\n * typeahead reagent component\n */\nre_com.typeahead.typeahead = (function re_com$typeahead$typeahead(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___66871 = arguments.length;\nvar i__4731__auto___66872 = (0);\nwhile(true){\nif((i__4731__auto___66872 < len__4730__auto___66871)){\nargs__4736__auto__.push((arguments[i__4731__auto___66872]));\n\nvar G__66873 = (i__4731__auto___66872 + (1));\ni__4731__auto___66872 = G__66873;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn re_com.typeahead.typeahead.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\nre_com.typeahead.typeahead.cljs$core$IFn$_invoke$arity$variadic = (function (p__66643){\nvar map__66644 = p__66643;\nvar map__66644__$1 = (((((!((map__66644 == null))))?(((((map__66644.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66644.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66644):map__66644);\nvar args = map__66644__$1;\nif((((!(goog.DEBUG)))?true:re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic(re_com.validate.extract_arg_data(re_com.typeahead.typeahead_args_desc),args,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"typeahead\"], 0)))){\n} else {\nthrow (new Error(\"Assert failed: (validate-args-macro typeahead-args-desc args \\\"typeahead\\\")\"));\n}\n\nvar map__66646 = re_com.typeahead.make_typeahead_state(args);\nvar map__66646__$1 = (((((!((map__66646 == null))))?(((((map__66646.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66646.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66646):map__66646);\nvar state = map__66646__$1;\nvar c_search = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66646__$1,new cljs.core.Keyword(null,\"c-search\",\"c-search\",1832536180));\nvar c_input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66646__$1,new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232));\nvar state_atom = reagent.core.atom.cljs$core$IFn$_invoke$arity$1(state);\nvar input_text_model = reagent.core.cursor(state_atom,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114)], null));\nre_com.typeahead.search_data_source_loop_BANG_(state_atom,c_search);\n\nreturn ((function (map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function() { \nvar G__66877__delegate = function (p__66654){\nvar map__66655 = p__66654;\nvar map__66655__$1 = (((((!((map__66655 == null))))?(((((map__66655.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66655.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66655):map__66655);\nvar args__$1 = map__66655__$1;\nvar disabled_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181));\nvar status_icon_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612));\nvar height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar status_tooltip = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007));\nvar model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"model\",\"model\",331153215));\nvar _debounce_delay = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_debounce-delay\",\"_debounce-delay\",-1476744225));\nvar attr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353));\nvar _on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_on-change\",\"_on-change\",156649312));\nvar placeholder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083));\nvar render_suggestion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"render-suggestion\",\"render-suggestion\",1472406503));\nvar _suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_suggestion-to-string\",\"_suggestion-to-string\",795407399));\nvar width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar data_source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676));\nvar _rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_rigid?\",\"_rigid?\",1424449294));\nvar style = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"style\",\"style\",-496642736));\nvar _change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_change-on-blur?\",\"_change-on-blur?\",1219941073));\nvar _immediate_model_update_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"_immediate-model-update?\",\"_immediate-model-update?\",1035374450));\nvar status = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"status\",\"status\",-1997798413));\nvar class$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66655__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\nif((((!(goog.DEBUG)))?true:re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic(re_com.validate.extract_arg_data(re_com.typeahead.typeahead_args_desc),args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"typeahead\"], 0)))){\n} else {\nthrow (new Error(\"Assert failed: (validate-args-macro typeahead-args-desc args \\\"typeahead\\\")\"));\n}\n\nvar map__66657 = cljs.core.deref(state_atom);\nvar map__66657__$1 = (((((!((map__66657 == null))))?(((((map__66657.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66657.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66657):map__66657);\nvar state__$1 = map__66657__$1;\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66657__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\nvar waiting_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66657__$1,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215));\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66657__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\nvar external_model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66657__$1,new cljs.core.Keyword(null,\"external-model\",\"external-model\",506095421));\nvar last_data_source = new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676).cljs$core$IFn$_invoke$arity$1(state__$1);\nvar latest_external_model = re_com.util.deref_or_value(model);\nvar width__$1 = (function (){var or__4131__auto__ = width;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn \"250px\";\n}\n})();\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(last_data_source,data_source)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.change_data_source,data_source);\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(latest_external_model,external_model)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.external_model_changed,latest_external_model);\n} else {\n}\n\nreturn new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.v_box,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),\"rc-typeahead\",new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),attr,new cljs.core.Keyword(null,\"width\",\"width\",-384071477),width__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.misc.input_text,new cljs.core.Keyword(null,\"model\",\"model\",331153215),input_text_model,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),class$,new cljs.core.Keyword(null,\"style\",\"style\",-496642736),style,new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181),disabled_QMARK_,new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612),status_icon_QMARK_,new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),status,new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007),status_tooltip,new cljs.core.Keyword(null,\"width\",\"width\",-384071477),width__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622),height,new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083),placeholder,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_com.typeahead.input_text_on_change_BANG_,state_atom),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),false,new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"on-key-down\",\"on-key-down\",-1374733765),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_com.typeahead.input_text_on_key_down_BANG_,state_atom),new cljs.core.Keyword(null,\"on-focus\",\"on-focus\",-13737624),((function (map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (){\nreturn cljs.core.List.EMPTY;\n});})(map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n,new cljs.core.Keyword(null,\"on-blur\",\"on-blur\",814300747),((function (map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.input_text_will_blur);\n});})(map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n], null)], null),(cljs.core.truth_((function (){var or__4131__auto__ = cljs.core.not_empty(suggestions);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn waiting_QMARK_;\n}\n})())?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"position\",\"position\",-2011731912),\"relative\"], null),new cljs.core.Keyword(null,\"child\",\"child\",623967545),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.v_box,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),\"rc-typeahead-suggestions-container\",new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(waiting_QMARK_)?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"align\",\"align\",1964212802),new cljs.core.Keyword(null,\"center\",\"center\",-748944368),new cljs.core.Keyword(null,\"child\",\"child\",623967545),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.misc.throbber,new cljs.core.Keyword(null,\"size\",\"size\",1098693007),new cljs.core.Keyword(null,\"small\",\"small\",2133478704),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),\"rc-typeahead-throbber\"], null)], null):null),(function (){var iter__4523__auto__ = ((function (map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function re_com$typeahead$iter__66664(s__66665){\nreturn (new cljs.core.LazySeq(null,((function (map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (){\nvar s__66665__$1 = s__66665;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__66665__$1);\nif(temp__5735__auto__){\nvar s__66665__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__66665__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__66665__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__66667 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__66666 = (0);\nwhile(true){\nif((i__66666 < size__4522__auto__)){\nvar vec__66669 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__66666);\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66669,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66669,(1),null);\nvar selected_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(suggestion_active_index,i);\ncljs.core.chunk_append(b__66667,cljs.core.with_meta(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"child\",\"child\",623967545),(cljs.core.truth_(render_suggestion)?(render_suggestion.cljs$core$IFn$_invoke$arity$1 ? render_suggestion.cljs$core$IFn$_invoke$arity$1(s) : render_suggestion.call(null,s)):s),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),[\"rc-typeahead-suggestion\",((selected_QMARK_)?\" active\":null)].join(''),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"on-mouse-over\",\"on-mouse-over\",-858472552),((function (i__66666,selected_QMARK_,vec__66669,i,s,c__4521__auto__,size__4522__auto__,b__66667,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.activate_suggestion_by_index,i);\n});})(i__66666,selected_QMARK_,vec__66669,i,s,c__4521__auto__,size__4522__auto__,b__66667,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n,new cljs.core.Keyword(null,\"on-mouse-down\",\"on-mouse-down\",1147755470),((function (i__66666,selected_QMARK_,vec__66669,i,s,c__4521__auto__,size__4522__auto__,b__66667,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (p1__66634_SHARP_){\np1__66634_SHARP_.preventDefault();\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.choose_suggestion_by_index,i);\n});})(i__66666,selected_QMARK_,vec__66669,i,s,c__4521__auto__,size__4522__auto__,b__66667,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),i], null)));\n\nvar G__66882 = (i__66666 + (1));\ni__66666 = G__66882;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__66667),re_com$typeahead$iter__66664(cljs.core.chunk_rest(s__66665__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__66667),null);\n}\n} else {\nvar vec__66672 = cljs.core.first(s__66665__$2);\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66672,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66672,(1),null);\nvar selected_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(suggestion_active_index,i);\nreturn cljs.core.cons(cljs.core.with_meta(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"child\",\"child\",623967545),(cljs.core.truth_(render_suggestion)?(render_suggestion.cljs$core$IFn$_invoke$arity$1 ? render_suggestion.cljs$core$IFn$_invoke$arity$1(s) : render_suggestion.call(null,s)):s),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),[\"rc-typeahead-suggestion\",((selected_QMARK_)?\" active\":null)].join(''),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"on-mouse-over\",\"on-mouse-over\",-858472552),((function (selected_QMARK_,vec__66672,i,s,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.activate_suggestion_by_index,i);\n});})(selected_QMARK_,vec__66672,i,s,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n,new cljs.core.Keyword(null,\"on-mouse-down\",\"on-mouse-down\",1147755470),((function (selected_QMARK_,vec__66672,i,s,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args){\nreturn (function (p1__66634_SHARP_){\np1__66634_SHARP_.preventDefault();\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.choose_suggestion_by_index,i);\n});})(selected_QMARK_,vec__66672,i,s,s__66665__$2,temp__5735__auto__,map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),i], null)),re_com$typeahead$iter__66664(cljs.core.rest(s__66665__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n,null,null));\n});})(map__66657,map__66657__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__66655,map__66655__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,attr,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,_immediate_model_update_QMARK_,status,class$,map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n;\nreturn iter__4523__auto__(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.range.cljs$core$IFn$_invoke$arity$0(),suggestions));\n})()], null)], null)], null):null)], null)], null);\n};\nvar G__66877 = function (var_args){\nvar p__66654 = null;\nif (arguments.length > 0) {\nvar G__66887__i = 0, G__66887__a = new Array(arguments.length -  0);\nwhile (G__66887__i < G__66887__a.length) {G__66887__a[G__66887__i] = arguments[G__66887__i + 0]; ++G__66887__i;}\n  p__66654 = new cljs.core.IndexedSeq(G__66887__a,0,null);\n} \nreturn G__66877__delegate.call(this,p__66654);};\nG__66877.cljs$lang$maxFixedArity = 0;\nG__66877.cljs$lang$applyTo = (function (arglist__66888){\nvar p__66654 = cljs.core.seq(arglist__66888);\nreturn G__66877__delegate(p__66654);\n});\nG__66877.cljs$core$IFn$_invoke$arity$variadic = G__66877__delegate;\nreturn G__66877;\n})()\n;\n;})(map__66646,map__66646__$1,state,c_search,c_input,state_atom,input_text_model,map__66644,map__66644__$1,args))\n});\n\nre_com.typeahead.typeahead.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nre_com.typeahead.typeahead.cljs$lang$applyTo = (function (seq66638){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq66638));\n});\n\n/**\n * Return a channel which will receive a value from the `in` channel only\n *   if no further value is received on the `in` channel in the next `ms` milliseconds.\n */\nre_com.typeahead.debounce = (function re_com$typeahead$debounce(in$,ms){\nvar out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__59195__auto___66889 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__59195__auto___66889,out){\nreturn (function (){\nvar f__59196__auto__ = (function (){var switch__59094__auto__ = ((function (c__59195__auto___66889,out){\nreturn (function (state_66732){\nvar state_val_66733 = (state_66732[(1)]);\nif((state_val_66733 === (7))){\nvar inst_66683 = (state_66732[(2)]);\nvar state_66732__$1 = state_66732;\nvar statearr_66734_66890 = state_66732__$1;\n(statearr_66734_66890[(2)] = inst_66683);\n\n(statearr_66734_66890[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (1))){\nvar inst_66678 = null;\nvar state_66732__$1 = (function (){var statearr_66735 = state_66732;\n(statearr_66735[(7)] = inst_66678);\n\nreturn statearr_66735;\n})();\nvar statearr_66736_66891 = state_66732__$1;\n(statearr_66736_66891[(2)] = null);\n\n(statearr_66736_66891[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (4))){\nvar state_66732__$1 = state_66732;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_66732__$1,(7),in$);\n} else {\nif((state_val_66733 === (15))){\nvar inst_66717 = (state_66732[(2)]);\nvar state_66732__$1 = (function (){var statearr_66737 = state_66732;\n(statearr_66737[(8)] = inst_66717);\n\nreturn statearr_66737;\n})();\nvar statearr_66738_66895 = state_66732__$1;\n(statearr_66738_66895[(2)] = null);\n\n(statearr_66738_66895[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (13))){\nvar inst_66704 = (state_66732[(9)]);\nvar inst_66719 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_66704,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\nvar state_66732__$1 = state_66732;\nif(inst_66719){\nvar statearr_66739_66896 = state_66732__$1;\n(statearr_66739_66896[(1)] = (16));\n\n} else {\nvar statearr_66740_66897 = state_66732__$1;\n(statearr_66740_66897[(1)] = (17));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (6))){\nvar inst_66687 = (state_66732[(10)]);\nvar inst_66686 = (state_66732[(2)]);\nvar inst_66687__$1 = cljs.core.async.timeout(ms);\nvar inst_66698 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_66699 = [in$,inst_66687__$1];\nvar inst_66700 = (new cljs.core.PersistentVector(null,2,(5),inst_66698,inst_66699,null));\nvar state_66732__$1 = (function (){var statearr_66741 = state_66732;\n(statearr_66741[(10)] = inst_66687__$1);\n\n(statearr_66741[(11)] = inst_66686);\n\nreturn statearr_66741;\n})();\nreturn cljs.core.async.ioc_alts_BANG_(state_66732__$1,(8),inst_66700);\n} else {\nif((state_val_66733 === (17))){\nvar state_66732__$1 = state_66732;\nvar statearr_66742_66898 = state_66732__$1;\n(statearr_66742_66898[(2)] = null);\n\n(statearr_66742_66898[(1)] = (18));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (3))){\nvar inst_66730 = (state_66732[(2)]);\nvar state_66732__$1 = state_66732;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_66732__$1,inst_66730);\n} else {\nif((state_val_66733 === (12))){\nvar inst_66686 = (state_66732[(11)]);\nvar state_66732__$1 = state_66732;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_66732__$1,(15),out,inst_66686);\n} else {\nif((state_val_66733 === (2))){\nvar inst_66678 = (state_66732[(7)]);\nvar inst_66680 = (inst_66678 == null);\nvar state_66732__$1 = state_66732;\nif(cljs.core.truth_(inst_66680)){\nvar statearr_66743_66899 = state_66732__$1;\n(statearr_66743_66899[(1)] = (4));\n\n} else {\nvar statearr_66744_66901 = state_66732__$1;\n(statearr_66744_66901[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (11))){\nvar inst_66727 = (state_66732[(2)]);\nvar inst_66678 = inst_66727;\nvar state_66732__$1 = (function (){var statearr_66745 = state_66732;\n(statearr_66745[(7)] = inst_66678);\n\nreturn statearr_66745;\n})();\nvar statearr_66746_66904 = state_66732__$1;\n(statearr_66746_66904[(2)] = null);\n\n(statearr_66746_66904[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (9))){\nvar inst_66702 = (state_66732[(12)]);\nvar inst_66710 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_66702,(0),null);\nvar inst_66711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_66702,(1),null);\nvar state_66732__$1 = (function (){var statearr_66747 = state_66732;\n(statearr_66747[(13)] = inst_66711);\n\nreturn statearr_66747;\n})();\nvar statearr_66748_66906 = state_66732__$1;\n(statearr_66748_66906[(2)] = inst_66710);\n\n(statearr_66748_66906[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (5))){\nvar inst_66678 = (state_66732[(7)]);\nvar state_66732__$1 = state_66732;\nvar statearr_66749_66907 = state_66732__$1;\n(statearr_66749_66907[(2)] = inst_66678);\n\n(statearr_66749_66907[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (14))){\nvar inst_66725 = (state_66732[(2)]);\nvar state_66732__$1 = state_66732;\nvar statearr_66750_66908 = state_66732__$1;\n(statearr_66750_66908[(2)] = inst_66725);\n\n(statearr_66750_66908[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (16))){\nvar inst_66703 = (state_66732[(14)]);\nvar state_66732__$1 = state_66732;\nvar statearr_66751_66909 = state_66732__$1;\n(statearr_66751_66909[(2)] = inst_66703);\n\n(statearr_66751_66909[(1)] = (18));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (10))){\nvar inst_66687 = (state_66732[(10)]);\nvar inst_66704 = (state_66732[(9)]);\nvar inst_66714 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_66704,inst_66687);\nvar state_66732__$1 = state_66732;\nif(inst_66714){\nvar statearr_66752_66910 = state_66732__$1;\n(statearr_66752_66910[(1)] = (12));\n\n} else {\nvar statearr_66753_66911 = state_66732__$1;\n(statearr_66753_66911[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (18))){\nvar inst_66723 = (state_66732[(2)]);\nvar state_66732__$1 = state_66732;\nvar statearr_66754_66913 = state_66732__$1;\n(statearr_66754_66913[(2)] = inst_66723);\n\n(statearr_66754_66913[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_66733 === (8))){\nvar inst_66702 = (state_66732[(12)]);\nvar inst_66704 = (state_66732[(9)]);\nvar inst_66702__$1 = (state_66732[(2)]);\nvar inst_66703 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_66702__$1,(0),null);\nvar inst_66704__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_66702__$1,(1),null);\nvar inst_66705 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_66704__$1,in$);\nvar state_66732__$1 = (function (){var statearr_66758 = state_66732;\n(statearr_66758[(14)] = inst_66703);\n\n(statearr_66758[(12)] = inst_66702__$1);\n\n(statearr_66758[(9)] = inst_66704__$1);\n\nreturn statearr_66758;\n})();\nif(inst_66705){\nvar statearr_66759_66914 = state_66732__$1;\n(statearr_66759_66914[(1)] = (9));\n\n} else {\nvar statearr_66760_66915 = state_66732__$1;\n(statearr_66760_66915[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__59195__auto___66889,out))\n;\nreturn ((function (switch__59094__auto__,c__59195__auto___66889,out){\nreturn (function() {\nvar re_com$typeahead$debounce_$_state_machine__59095__auto__ = null;\nvar re_com$typeahead$debounce_$_state_machine__59095__auto____0 = (function (){\nvar statearr_66761 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_66761[(0)] = re_com$typeahead$debounce_$_state_machine__59095__auto__);\n\n(statearr_66761[(1)] = (1));\n\nreturn statearr_66761;\n});\nvar re_com$typeahead$debounce_$_state_machine__59095__auto____1 = (function (state_66732){\nwhile(true){\nvar ret_value__59096__auto__ = (function (){try{while(true){\nvar result__59097__auto__ = switch__59094__auto__(state_66732);\nif(cljs.core.keyword_identical_QMARK_(result__59097__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59097__auto__;\n}\nbreak;\n}\n}catch (e66762){if((e66762 instanceof Object)){\nvar ex__59098__auto__ = e66762;\nvar statearr_66763_66917 = state_66732;\n(statearr_66763_66917[(5)] = ex__59098__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_66732);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e66762;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59096__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__66918 = state_66732;\nstate_66732 = G__66918;\ncontinue;\n} else {\nreturn ret_value__59096__auto__;\n}\nbreak;\n}\n});\nre_com$typeahead$debounce_$_state_machine__59095__auto__ = function(state_66732){\nswitch(arguments.length){\ncase 0:\nreturn re_com$typeahead$debounce_$_state_machine__59095__auto____0.call(this);\ncase 1:\nreturn re_com$typeahead$debounce_$_state_machine__59095__auto____1.call(this,state_66732);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nre_com$typeahead$debounce_$_state_machine__59095__auto__.cljs$core$IFn$_invoke$arity$0 = re_com$typeahead$debounce_$_state_machine__59095__auto____0;\nre_com$typeahead$debounce_$_state_machine__59095__auto__.cljs$core$IFn$_invoke$arity$1 = re_com$typeahead$debounce_$_state_machine__59095__auto____1;\nreturn re_com$typeahead$debounce_$_state_machine__59095__auto__;\n})()\n;})(switch__59094__auto__,c__59195__auto___66889,out))\n})();\nvar state__59197__auto__ = (function (){var statearr_66765 = (f__59196__auto__.cljs$core$IFn$_invoke$arity$0 ? f__59196__auto__.cljs$core$IFn$_invoke$arity$0() : f__59196__auto__.call(null));\n(statearr_66765[(6)] = c__59195__auto___66889);\n\nreturn statearr_66765;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__59197__auto__);\n});})(c__59195__auto___66889,out))\n);\n\n\nreturn out;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_com/typeahead.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$handler-fn","~$re-com.core","~$alt!","~$cljs.core.async.macros","~$go-loop","^P","~$validate-args-macro","~$re-com.validate"],"~:excludes",["~#set",[]],"~:name","~$re-com.typeahead","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent","~$reagent.core","~$re-com.util","^12","~$re-com.popover","^13","~$re-com.box","^14","^11","^11","~$cljs.core","^15","~$goog","^16","~$cljs.core.async","^17","^S","^S","~$goog.events.KeyCodes","^18","~$re-com.misc","^19"],"~:seen",["^U",["~:require","~:require-macros"]],"~:uses",["^ ","~$align-style","^14","~$timeout","^17","~$html-attr?","^S","~$h-box","^14","~$<!","^17","~$string-or-atom?","^S","~$deref-or-value","^12","~$throbber-sizes-list","^S","~$throbber-size?","^S","~$chan","^17","~$input-text","^19","~$regex?","^S","~$css-style?","^S","~$box","^14","~$px","^12","~$string-or-hiccup?","^S","~$v-box","^14","~$flex-child-style","^14","~$input-status-type?","^S","~$popover-tooltip","^13","~$line","^14","~$number-or-string?","^S","~$input-status-types-list","^S","~$gap","^14","~$throbber","^19","~$put!","^17"],"^1<",["^ ","^N","^N","^P","^P","^S","^S","^15","^15","^10","^11","^11","^11","^17","^17"],"~:form",["~#list",["~$ns","^W",["^1Y",["^1<",["^N","~:refer",["^M"]],["^P","^1[",["^O","^Q"]]]],["^1Y",["^1;",["^17","^1[",["^1G","^1?","^1B","^1W"]],["^19","^1[",["^1V","^1H"]],["^12","^1[",["^1D","^1L"]],["^13","^1[",["^1Q"]],["^14","^1[",["^1A","^1N","^1K","^1U","^1R","^1O","^1>"]],["^S","^1[",["^1P","^1T","^1I","^1M","^1J","^1@","^1S","^1C","^1F","^1E"],"~:refer-macros",["^R"]],["^11","~:as","^10"],["^18"]]]]],"~:flags",["^ ","^1<",["^U",[]],"^1;",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^16","^15","^17","^19","^12","^13","^14","^S","^11","^18"]],"^Y","^W","~:resource-id",["~:shadow.build.classpath/resource","re_com/typeahead.cljs"],"~:compiled-at",1569333898060,"~:resource-name","re_com/typeahead.cljs","~:warnings",[],"~:source","(ns re-com.typeahead\n  (:require-macros [re-com.core :refer [handler-fn]]\n                   [cljs.core.async.macros :refer [alt! go-loop]])\n  (:require [cljs.core.async :refer [chan timeout <! put!]]\n            [re-com.misc     :refer [throbber input-text]]\n            [re-com.util     :refer [deref-or-value px]]\n            [re-com.popover  :refer [popover-tooltip]] ;; need?\n            [re-com.box      :refer [h-box v-box box gap line flex-child-style align-style]] ;; need?\n            [re-com.validate :refer [input-status-type? input-status-types-list regex? string-or-hiccup? css-style? html-attr? number-or-string?\n                                     string-or-atom? throbber-size? throbber-sizes-list] :refer-macros [validate-args-macro]]\n            [reagent.core    :as    reagent]\n            [goog.events.KeyCodes]))\n\n;; TODO\n;; ability to focus & blur the input-text would be nice... this is also missing from input-text\n;; the typeahead should blur the input-text after a selection is chosen\n\n(declare debounce display-suggestion)\n(defn- make-typeahead-state\n  \"Return an initial value for the typeahead state, given `args`.\"\n  [{:as args :keys [on-change rigid? change-on-blur? immediate-model-update? data-source suggestion-to-string debounce-delay model]}]\n  (let [external-model-value (deref-or-value model)]\n    (cond-> (let [c-input (chan)]\n              {:input-text \"\"\n               :external-model (deref-or-value model)\n               :model          (deref-or-value model)\n               :waiting? false\n               :suggestions []\n               :displaying-suggestion? false\n               :suggestion-to-string (or suggestion-to-string str)\n               :data-source data-source\n               :change-on-blur? change-on-blur?\n               :immediate-model-update? immediate-model-update?\n               :on-change  on-change\n               :rigid?     rigid?\n               :c-input    c-input\n               :c-search   (debounce c-input debounce-delay)})\n      external-model-value\n      (display-suggestion external-model-value))))\n\n;; ------------------------------------------------------------------------------------\n;; State predicates:  state -> value? -> boolean\n;; ------------------------------------------------------------------------------------\n\n(defn- event-updates-model?\n  \"Should `event` update the `typeahead` `model`?\"\n  [{:as state :keys [change-on-blur? rigid? immediate-model-update?]} event]\n  (let [change-on-blur?         (deref-or-value change-on-blur?)\n        immediate-model-update? (deref-or-value immediate-model-update?)\n        rigid?                  (deref-or-value rigid?)]\n    (case event\n      :input-text-blurred   (and change-on-blur? (not rigid?))\n      :suggestion-activated (not change-on-blur?)\n      :input-text-changed   (and (not rigid?) (or (not change-on-blur?) immediate-model-update?))\n      false)))\n\n(defn- event-displays-suggestion?\n  \"Should `event` cause the `input-text` value to be used to show the active suggestion?\"\n  [{:as state :keys [change-on-blur?]} event]\n  (let [change-on-blur? (deref-or-value change-on-blur?)]\n    (case event\n      :suggestion-activated (not change-on-blur?)\n      false)))\n\n;; ------------------------------------------------------------------------------------\n;; State update helpers: state -> value? -> next-state\n;;   all pure, _except_ that they may call `on-change`\n;; ------------------------------------------------------------------------------------\n\n(defn- update-model\n  \"Change the `typeahead` `model` value to `new-value`\"\n  [{:as state :keys [on-change]} new-value]\n  (when on-change (on-change new-value))\n  (assoc state :model new-value))\n\n(defn- display-suggestion\n  \"Change the `input-text` `model` to the string representation of `suggestion`\"\n  [{:as state :keys [suggestion-to-string]} suggestion]\n  (let [suggestion-string (suggestion-to-string suggestion)]\n    (cond-> state\n      suggestion-string (assoc :input-text suggestion-string\n                               :displaying-suggestion? true))))\n\n(defn- clear-suggestions\n  [state]\n  (-> state\n      (dissoc :suggestions :suggestion-active-index)))\n\n(defn- activate-suggestion-by-index\n  \"Make the suggestion at `index` the active suggestion\"\n  [{:as state :keys [suggestions]} index]\n  (let [suggestion (nth suggestions index)]\n    (cond-> state\n      :always (assoc :suggestion-active-index index)\n      (event-updates-model?       state :suggestion-activated) (update-model suggestion)\n      (event-displays-suggestion? state :suggestion-activated) (display-suggestion suggestion))))\n\n(defn- choose-suggestion-by-index\n  \"Choose the suggestion at `index`\"\n  [{:as state :keys [suggestions]} index]\n  (let [suggestion (nth suggestions index)]\n    (-> state\n        (activate-suggestion-by-index index)\n        (update-model suggestion)\n        (display-suggestion suggestion)\n        clear-suggestions)))\n\n(defn- choose-suggestion-active\n  [{:as state :keys [suggestion-active-index]}]\n  (cond-> state\n    suggestion-active-index (choose-suggestion-by-index suggestion-active-index)))\n\n(defn- wrap [index count] (mod (+ count index) count))\n\n(defn- activate-suggestion-next\n  [{:as state :keys [suggestions suggestion-active-index]}]\n  (cond-> state\n    (seq suggestions)\n    (activate-suggestion-by-index (-> suggestion-active-index (or -1) inc (wrap (count suggestions))))))\n\n(defn- activate-suggestion-prev\n  [{:as state :keys [suggestions suggestion-active-index]}]\n  (cond-> state\n    (seq suggestions)\n    (activate-suggestion-by-index (-> suggestion-active-index (or 0) dec (wrap (count suggestions))))))\n\n(defn- reset-typeahead\n  [state]\n  (cond-> state\n    :always clear-suggestions\n    :always (assoc :waiting? false :input-text \"\" :displaying-suggestion? false)\n    (event-updates-model? state :input-text-changed) (update-model nil)))\n\n(defn- got-suggestions\n  \"Update state when new suggestions are available\"\n  [state suggestions]\n  (-> state\n      (assoc :suggestions suggestions\n             :waiting? false\n             :suggestion-active-index nil)))\n\n(defn- input-text-will-blur\n  \"Update state when the `input-text` is about to lose focus.\"\n  [{:keys [input-text displaying-suggestion? model] :as state}]\n  (cond\n    (and (not displaying-suggestion?)\n         (event-updates-model? state :input-text-blurred))\n    (update-model state input-text)\n    :else (-> state\n              ;; if nothing was actually selected, then view should be the unchanged value\n              (assoc :input-text input-text)\n              clear-suggestions)))\n\n(defn- change-data-source\n  \"Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n  came from the old `data-source`.\"\n  [state data-source]\n  (-> state\n      reset-typeahead\n      (assoc :data-source data-source)))\n\n(defn- external-model-changed\n  \"Update state when the external model value has changed.\"\n  [state new-value]\n  (-> state\n      (update-model new-value)\n      (display-suggestion new-value)\n      (assoc :external-model new-value)\n      clear-suggestions))\n\n;; ------------------------------------------------------------------------------------\n;; Functions with side-effects\n;; ------------------------------------------------------------------------------------\n\n(defn- search-data-source!\n  \"Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n  (asynchronously, if `data-source` does not return a truthy value).\"\n  [data-source state-atom text]\n  (if-let [return-value (data-source text #(swap! state-atom got-suggestions %1))]\n    (swap! state-atom got-suggestions return-value)\n    (swap! state-atom assoc :waiting? true)))\n\n(defn- search-data-source-loop!\n  \"For every value arriving on the `c-search` channel, call `search-data-source!`.\"\n  [state-atom c-search]\n  (go-loop []\n    (let [new-text (<! c-search)\n          data-source (:data-source @state-atom)]\n      (if (= \"\" new-text)\n        (do\n          (swap! state-atom reset-typeahead)\n          (search-data-source! data-source state-atom \"\"))\n        (search-data-source! data-source state-atom new-text))\n      (recur))))\n\n(defn- input-text-on-change!\n  \"Update state in response to `input-text` `on-change`, and put text on the `c-input` channel\"\n  [state-atom new-text]\n  (let [{:as state :keys [input-text c-input]} @state-atom]\n    (if (= new-text input-text) state ;; keypresses that do not change the value still call on-change, ignore these\n        (do\n          (put! c-input new-text)\n          (swap! state-atom\n                 #(cond-> %\n                    :always (assoc :input-text new-text :displaying-suggestion? false)\n                    (event-updates-model? state :input-text-changed) (update-model new-text)))))))\n\n(defn- input-text-on-key-down!\n  [state-atom event]\n  (condp = (.-which event)\n    goog.events.KeyCodes.UP     (swap! state-atom activate-suggestion-prev)\n    goog.events.KeyCodes.DOWN   (swap! state-atom activate-suggestion-next)\n    goog.events.KeyCodes.ENTER  (swap! state-atom choose-suggestion-active)\n    goog.events.KeyCodes.ESC    (swap! state-atom got-suggestions [])\n    ;; tab requires special treatment\n    ;; trap it IFF there are suggestions, otherwise let the input defocus\n    goog.events.KeyCodes.TAB\n    (if (not-empty (:suggestions @state-atom))\n      (do (swap! state-atom activate-suggestion-next)\n          (.preventDefault event))\n      (swap! state-atom input-text-will-blur))\n    true))\n\n\n;; ------------------------------------------------------------------------------------\n;;  Component: typeahead\n;; ------------------------------------------------------------------------------------\n\n(def typeahead-args-desc\n  [{:name :data-source             :required true                   :type \"fn\"                   :validate-fn fn?                :description [:span [:code \":data-source\"] \" supplies suggestion objects. This can either accept a single string argument (the search term), or a string and a callback. For the first case, the fn should return a collection of suggestion objects (which can be anything). For the second case, the fn should return \"[:code \"nil\" ]\", and eventually result in a call to the callback with a collection of suggestion objects.\"]}\n   {:name :on-change               :required false :default nil     :type \"string -> nil\"        :validate-fn fn?                :description [:span [:code \":change-on-blur?\"] \" controls when it is called. It is passed a suggestion object.\"] }\n   {:name :change-on-blur?         :required false :default true    :type \"boolean | atom\"                                       :description [:span \"when true, invoke \" [:code \":on-change\"] \" when the user chooses a suggestion, otherwise invoke it on every change (navigating through suggestions with the mouse or keyboard, or if \"[:code \"rigid?\"]\" is also \"[:code \"false\" ]\", invoke it on every character typed.)\"] }\n   {:name :immediate-model-update? :required false :default false   :type \"boolean | atom\"                                       :description [:span \"update model with currently entered text on every keystroke (similar to \" [:code \":change-on-blur?\"] \" but no changes to model if mouse is over suggestions)\"]}\n   {:name :model                   :required false :default nil     :type \"object | atom\"                                        :description \"the initial value of the typeahead (should match the suggestion objects returned by \" [:code \":data-source\"] \").\"}\n   {:name :debounce-delay          :required false :default 250     :type \"integer\"              :validate-fn integer?           :description [:span \"after receiving input, the typeahead will wait this many milliseconds without receiving new input before calling \" [:code \":data-source\"] \".\"]}\n   {:name :render-suggestion       :required false                  :type \"render fn\"            :validate-fn fn?                :description \"override the rendering of the suggestion items by passing a fn that returns hiccup forms. The fn will receive two arguments: the search term, and the suggestion object.\"}\n   {:name :suggestion-to-string    :required false                  :type \"suggestion -> string\" :validate-fn fn?                :description \"when a suggestion is chosen, the input-text value will be set to the result of calling this fn with the suggestion object.\"}\n   {:name :rigid?                  :required false :default true    :type \"boolean | atom\"                                       :description [:span \"If \"[:code \"false\"]\" the user will be allowed to choose arbitrary text input rather than a suggestion from \" [:code \":data-source\"]\". In this case, a string will be supplied in lieu of a suggestion object.\" ]}\n\n   ;; the rest of the arguments are forwarded to the wrapped `input-text`\n   {:name :status                  :required false                  :type \"keyword\"              :validate-fn input-status-type? :description [:span \"validation status. \" [:code \"nil/omitted\"] \" for normal status or one of: \" input-status-types-list]}\n   {:name :status-icon?            :required false :default false   :type \"boolean\"                                              :description [:span \"when true, display an icon to match \" [:code \":status\"] \" (no icon for nil)\"]}\n   {:name :status-tooltip          :required false                  :type \"string\"               :validate-fn string?            :description \"displayed in status icon's tooltip\"}\n   {:name :placeholder             :required false                  :type \"string\"               :validate-fn string?            :description \"background text shown when empty\"}\n   {:name :width                   :required false :default \"250px\" :type \"string\"               :validate-fn string?            :description \"standard CSS width setting for this input\"}\n   {:name :height                  :required false                  :type \"string\"               :validate-fn string?            :description \"standard CSS height setting for this input\"}\n   {:name :disabled?               :required false :default false   :type \"boolean | atom\"                                       :description \"if true, the user can't interact (input anything)\"}\n   {:name :class                   :required false                  :type \"string\"               :validate-fn string?            :description \"CSS class names, space separated (applies to the textbox)\"}\n   {:name :style                   :required false                  :type \"CSS style map\"        :validate-fn css-style?         :description \"CSS styles to add or override (applies to the textbox)\"}\n   {:name :attr                    :required false                  :type \"HTML attr map\"        :validate-fn html-attr?         :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to \" [:span.bold \"the outer container\"] \", rather than the textbox)\"]}])\n\n(defn typeahead\n  \"typeahead reagent component\"\n  [& {:keys [] :as args}]\n  {:pre [(validate-args-macro typeahead-args-desc args \"typeahead\")]}\n  (let [{:as state :keys [c-search c-input]} (make-typeahead-state args)\n        state-atom (reagent/atom state)\n        input-text-model (reagent/cursor state-atom [:input-text])]\n    (search-data-source-loop! state-atom c-search)\n    (fn\n      [& {:as   args\n          :keys [data-source _on-change _change-on-blur? _immediate-model-update? model _debounce-delay render-suggestion _suggestion-to-string _rigid?\n                 ;; forwarded to wrapped `input-text`:\n                 status status-icon? status-tooltip placeholder width height disabled? class style attr]}]\n      {:pre [(validate-args-macro typeahead-args-desc args \"typeahead\")]}\n      (let [{:as state :keys [suggestions waiting? suggestion-active-index external-model]} @state-atom\n            last-data-source (:data-source state)\n            latest-external-model (deref-or-value model)\n            width (or width \"250px\")]\n        (when (not= last-data-source data-source)\n          (swap! state-atom change-data-source data-source))\n        (when (not= latest-external-model external-model)\n          (swap! state-atom external-model-changed latest-external-model))\n        [v-box\n         :class    \"rc-typeahead\"\n         :attr     attr\n         :width    width\n         :children [[input-text\n                     :model          input-text-model\n                     :class          class\n                     :style          style\n                     :disabled?      disabled?\n                     :status-icon?   status-icon?\n                     :status         status\n                     :status-tooltip status-tooltip\n                     :width          width\n                     :height         height\n                     :placeholder    placeholder\n                     :on-change      (partial input-text-on-change! state-atom)\n                     :change-on-blur? false\n                     :attr {:on-key-down (partial input-text-on-key-down! state-atom)\n                            :on-focus #()\n                            ;; on-blur should behave the same as tabbing off\n                            :on-blur #(swap! state-atom input-text-will-blur)}]\n                    (if (or (not-empty suggestions) waiting?)\n                      [box\n                       :style {:position \"relative\"}\n                       :child [v-box\n                               :class \"rc-typeahead-suggestions-container\"\n                               :children [(when waiting?\n                                            [box\n                                             :align :center\n                                             :child [throbber :size :small :class \"rc-typeahead-throbber\"]])\n                                          (for [[i s] (map vector (range) suggestions)\n                                                :let [selected? (= suggestion-active-index i)]]\n                                            ^{:key i}\n                                            [box\n                                             :child (if render-suggestion\n                                                      (render-suggestion s)\n                                                      s)\n                                             :class (str \"rc-typeahead-suggestion\"\n                                                         (when selected? \" active\"))\n                                             :attr {:on-mouse-over #(swap! state-atom activate-suggestion-by-index i)\n                                                    :on-mouse-down #(do (.preventDefault %) (swap! state-atom choose-suggestion-by-index i))}])]]])]]))))\n\n(defn- debounce\n  \"Return a channel which will receive a value from the `in` channel only\n  if no further value is received on the `in` channel in the next `ms` milliseconds.\"\n  [in ms]\n  (let [out (chan)]\n    (go-loop [last-val nil]\n      (let [val (if (nil? last-val) (<! in) last-val)\n            timer (timeout ms)]\n        (let [v (alt!\n                  in ([val _] val)\n                  timer (do (>! out val) nil))]\n          (recur v))))\n    out))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__66452","map__66453","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","re-com.typeahead/make-typeahead-state","args","on-change","rigid?","change-on-blur?","immediate-model-update?","data-source","suggestion-to-string","debounce-delay","model","external-model-value","re-com.util/deref-or-value","G__66461","c-input","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","or__4131__auto__","cljs.core/str","re-com.typeahead/debounce","re-com.typeahead/display-suggestion","p__66468","map__66469","re-com.typeahead/event-updates-model?","state","event","G__66472","cljs.core/Keyword","and__4120__auto__","cljs.core/not","p__66473","map__66474","re-com.typeahead/event-displays-suggestion?","G__66476","p__66480","map__66485","re-com.typeahead/update-model","new-value","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__66505","map__66506","suggestion","suggestion-string","G__66509","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","re-com.typeahead/clear-suggestions","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","p__66513","map__66514","re-com.typeahead/activate-suggestion-by-index","suggestions","index","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","G__66517","p__66521","map__66522","re-com.typeahead/choose-suggestion-by-index","p__66524","map__66525","re-com.typeahead/choose-suggestion-active","suggestion-active-index","G__66529","re-com.typeahead/wrap","count","cljs.core/mod","p__66533","map__66534","re-com.typeahead/activate-suggestion-next","G__66536","cljs.core/seq","cljs.core/count","p__66541","map__66542","re-com.typeahead/activate-suggestion-prev","G__66547","re-com.typeahead/reset-typeahead","G__66551","re-com.typeahead/got-suggestions","p__66556","map__66557","re-com.typeahead/input-text-will-blur","input-text","displaying-suggestion?","re-com.typeahead/change-data-source","re-com.typeahead/external-model-changed","re-com.typeahead/search-data-source!","state-atom","text","temp__5733__auto__","return-value","G__66562","G__66563","p1__66560#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","re-com.typeahead/search-data-source-loop!","c-search","c__59195__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__59196__auto__","switch__59094__auto__","state_66587","state_val_66588","statearr-66590","cljs.core.async.impl.ioc-helpers/take!","inst_66585","cljs.core.async.impl.ioc-helpers/return-chan","inst_66572","inst_66573","cljs.core/deref","inst_66574","inst_66575","statearr-66591","statearr-66592","statearr-66593","inst_66577","inst_66578","statearr-66594","statearr-66595","inst_66580","statearr-66596","inst_66582","statearr-66597","statearr-66598","statearr-66599","state-machine__59095__auto__","ret-value__59096__auto__","result__59097__auto__","cljs.core/keyword-identical?","e66600","js/Object","ex__59098__auto__","statearr-66601","cljs.core.async.impl.ioc-helpers/process-exception","state__59197__auto__","statearr-66605","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","re-com.typeahead/input-text-on-change!","new-text","map__66613","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","p1__66606#","G__66620","re-com.typeahead/input-text-on-key-down!","pred__66624","expr__66625","cljs.core/=","js/goog.events.KeyCodes.UP","js/goog.events.KeyCodes.DOWN","js/goog.events.KeyCodes.ENTER","js/goog.events.KeyCodes.ESC","js/goog.events.KeyCodes.TAB","cljs.core/not-empty","re-com.typeahead/typeahead-args-desc","cljs.core/fn?","cljs.core/integer?","re-com.validate/input-status-type?","re-com.validate/input-status-types-list","cljs.core/string?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","re-com.typeahead/typeahead","p__66643","map__66644","js/Error","seq66638","self__4718__auto__","js/goog.DEBUG","re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic","re-com.validate/extract-arg-data","map__66646","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","input-text-model","reagent.core/cursor","p__66654","map__66655","_on-change","_change-on-blur?","_immediate-model-update?","_debounce-delay","render-suggestion","_suggestion-to-string","_rigid?","status","status-icon?","status-tooltip","placeholder","width","height","disabled?","class","style","attr","map__66657","waiting?","external-model","last-data-source","latest-external-model","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","re-com.box/v-box","re-com.misc/input-text","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","re-com.box/box","re-com.misc/throbber","iter__4523__auto__","s__66665","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__66667","cljs.core/chunk-buffer","i__66666","vec__66669","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","p1__66634#","cljs.core/chunk-cons","cljs.core/chunk","iter__66664","cljs.core/chunk-rest","vec__66672","cljs.core/first","cljs.core/cons","cljs.core/rest","i","s","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/vector","cljs.core.range.cljs$core$IFn$_invoke$arity$0","selected?","in","ms","out","state_66732","state_val_66733","inst_66683","statearr-66734","inst_66678","statearr-66735","statearr-66736","inst_66717","statearr-66737","statearr-66738","inst_66704","inst_66719","statearr-66739","statearr-66740","inst_66687","inst_66686","inst_66698","cljs.core/PersistentVector","inst_66699","inst_66700","statearr-66741","cljs.core.async/ioc-alts!","statearr-66742","inst_66730","cljs.core.async.impl.ioc-helpers/put!","inst_66680","statearr-66743","statearr-66744","inst_66727","statearr-66745","statearr-66746","inst_66702","inst_66710","inst_66711","statearr-66747","statearr-66748","statearr-66749","inst_66725","statearr-66750","inst_66703","statearr-66751","inst_66714","statearr-66752","statearr-66753","inst_66723","statearr-66754","inst_66705","statearr-66758","statearr-66759","statearr-66760","statearr-66761","e66762","statearr-66763","statearr-66765","cljs.core.async/timeout","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1569333690000,1569333690000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^26","reagent/impl/batching.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^26","goog/dom/tagname.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.dom.HtmlElement"]]],["^26","cljs/core/async/impl/ioc_helpers.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","~$cljs.core.async.impl.protocols"]]],["^26","goog/i18n/datetimesymbols.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","goog/labs/useragent/platform.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.labs.userAgent.util","~$goog.string"]]],["^26","cljs/core/async.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2P","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^26","goog/math/math.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","~$goog.asserts"]]],["^26","goog/string/stringformat.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2R"]]],["^26","goog/labs/useragent/browser.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Q","~$goog.object","~$goog.string.internal"]]],["^26","goog/array/array.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2Y"]]],["^2C","node_modules/prop-types/checkPropTypes.js"],[1569333690000,1569333690000,1549836454000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^26","reagent/impl/util.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2K","^2L","^2N"]]],["^26","re_com/close_button.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^12","^S","^14","^11"]]],["^26","goog/useragent/useragent.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Q","~$goog.reflect","^2R"]]],["^26","goog/events/keycodes.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.userAgent"]]],["^2C","node_modules/fbjs/lib/emptyFunction.js"],[1569333690000,1569333690000,1528785402000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","goog/debug/error.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^2C","node_modules/fbjs/lib/emptyObject.js"],[1569333690000,1569333690000,1528785402000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","goog/dom/nodetype.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","re_com/util.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","~$clojure.set","~$reagent.ratom","~$goog.date.DateTime","~$goog.date.UtcDateTime"]]],["^2C","node_modules/scheduler/cjs/scheduler.development.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","goog/date/utcdatetime.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.date","~$goog.date.Date","^38","~$goog.date.Interval"]]],["^26","reagent/ratom.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2M","^2K","~$reagent.impl.batching","^36"]]],["^2C","node_modules/scheduler/cjs/scheduler.production.min.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","goog/date/datelike.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^2C","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^2C","node_modules/create-react-class/factory.js"],[1569333690000,1569333690000,1517346959000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^2C","node_modules/react/index.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^26","shadow/js.js"],[1569333690000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","goog/object/object.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","reagent/impl/template.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^?","^2N","~$clojure.walk","^2M","~$reagent.impl.component","^3=","^37","^2L","^2K"]]],["^2C","node_modules/react-dom/cjs/react-dom.production.min.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","^?","^3>","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1569333690000,1561895393000],["^2C","node_modules/react/cjs/react.development.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","^3>","~$module$node_modules$prop_types$checkPropTypes"]]],["^26","re_com/validate.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","~$cljs-time.core","^36","^12","^11","~$reagent.impl.template","^2R"]]],["^26","goog/math/long.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2Y","^34"]]],["^26","cljs/core/async/impl/channels.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2P","^2V","^2T"]]],["^26","goog/string/internal.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^2C","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^2C","node_modules/fbjs/lib/warning.js"],[1569333690000,1569333690000,1528785401000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^26","re_com/popover.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^12","^14","~$re-com.close-button","^S","^2N","^11","^37"]]],["^26","goog/functions/functions.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","cljs/core/async/impl/dispatch.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2T","~$goog.async.nextTick"]]],["^26","reagent/impl/component.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^A","^?","^2M","^3=","^37","^2L","^2K"]]],["^26","clojure/walk.cljs"],[1561895393000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15"]]],["^26","cljs/core/async/impl/protocols.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15"]]],["^26","goog/structs/map.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^26","goog/date/date.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2Y","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","^2R"]]],["^26","re_com/typeahead.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^17","^19","^12","^13","^14","^S","^11","^18"]]],["^2C","node_modules/scheduler/index.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^26","goog/labs/useragent/engine.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Q","^2R"]]],["^26","re_com/box.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2N","^S"]]],["^26","goog/asserts/asserts.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^26","cljs/core/async/impl/buffers.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2P"]]],["^26","goog/uri/uri.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Y","^2R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2C","node_modules/object-assign/index.js"],[1569333690000,1569333690000,1484580833000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","cljs/core/async/impl/timers.cljs"],[1563124078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2P","^2S","^2V"]]],["^26","goog/base.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",[]]],["^26","goog/structs/structs.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Z"]]],["^26","clojure/string.cljs"],[1561895393000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2R","~$goog.string.StringBuffer"]]],["^2C","node_modules/create-react-class/index.js"],[1569333690000,1569333690000,1517346956000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","^?","~$module$node_modules$create_react_class$factory"]]],["^2C","node_modules/react/cjs/react.production.min.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","^3>"]]],["^26","goog/debug/entrypointregistry.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2Y"]]],["^26","goog/string/string.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2["]]],["^26","goog/reflect/reflect.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","goog/labs/useragent/util.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2["]]],["^26","reagent/core.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^?","^3J","^3E","^2M","^3=","^37","^2K","^2L","~$reagent.dom"]]],["^26","goog/string/stringbuffer.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","goog/iter/iter.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Y","~$goog.functions","~$goog.math"]]],["^26","goog/async/nexttick.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^42","^31","^32"]]],["^26","reagent/dom.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^C","^2M","^3J","^3=","^37","^2K","^2L"]]],["^2C","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1569333690000,1569333690000,1549571078000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]],["^26","reagent/interop.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15"]]],["^26","goog/dom/htmlelement.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^26","cljs/core.cljs"],[1561895393000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["~$goog.math.Long","~$goog.math.Integer","^2R","^2Z","^2X","~$goog.Uri","^3["]]],["^26","reagent/debug.cljs"],[1561294050000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15"]]],["^26","goog/math/integer.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16"]]],["^2C","node_modules/scheduler/tracing.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2C","node_modules/react-dom/cjs/react-dom.development.js"],[1569333690000,1569333690000,499162500000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H","^?","^3>","^3H","^3F","~$module$node_modules$scheduler$tracing"]]],["^26","clojure/set.cljs"],[1561895393000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15"]]],["^26","cljs_time/core.cljs"],[1568116628000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","~$cljs-time.internal.core","^2N","^3<","^3:","^3;","^38","^39"]]],["^26","goog/uri/utils.js"],[1561895386000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^2X","^2Y","^2R"]]],["^26","cljs_time/internal/core.cljs"],[1568116628000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^2N","^2R","~$goog.string.format","^3:"]]],["^26","re_com/misc.cljs"],[1569333687000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^16","^15","^12","^13","^14","^S","^11"]]],["^2C","node_modules/fbjs/lib/invariant.js"],[1569333690000,1569333690000,1528785400000,"^2D",["^ ","^2E",null,"^2F",["^U",[]],"^2G",["^2H"]]]]],"~:clj-info",["^ ","jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/core.clj",1561294050000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/exec/threadpool.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/dispatch.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/re-com/re-com/2.6.0/re-com-2.6.0.jar!/re_com/core.clj",1569333687000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async/macros.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1561294050000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async/impl/ioc_macros.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1566667515000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1562927083000,"jar:file:/home/kevinmungai/.m2/repository/re-com/re-com/2.6.0/re-com-2.6.0.jar!/re_com/validate.clj",1569333687000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1561294050000,"jar:file:/home/kevinmungai/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1561294050000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1561294032000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/concurrent.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1561895393000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1566667511000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/protocols.clj",1563124078000,"jar:file:/home/kevinmungai/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1561895393000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_com/typeahead.cljs","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",["^ ","^M","^N","^O","^P","^Q","^P","^R","^S"],"^T",["^U",[]],"^V","^W","^Z",null,"^[",["^ ","^10","^11","^12","^12","^13","^13","^14","^14","^11","^11","^15","^15","^16","^16","^17","^17","^S","^S","^18","^18","^19","^19"],"^1:",["^U",["^1;","^1<"]],"~:shadow/js-access-global",["^U",["Object","Error"]],"^1=",["^ ","^1>","^14","^1?","^17","^1@","^S","^1A","^14","^1B","^17","^1C","^S","^1D","^12","^1E","^S","^1F","^S","^1G","^17","^1H","^19","^1I","^S","^1J","^S","^1K","^14","^1L","^12","^1M","^S","^1N","^14","^1O","^14","^1P","^S","^1Q","^13","^1R","^14","^1S","^S","^1T","^S","^1U","^14","^1V","^19","^1W","^17"],"~:defs",["^ ","~$activate-suggestion-next",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",115,"^8",8,"^9",115,"^:",32,"~:private",true,"~:arglists",["^1Y",["~$quote",["^1Y",[[["^ ","^21","~$state","~:keys",["~$suggestions","~$suggestion-active-index"]]]]]]]],"^5>",true,"^V","~$re-com.typeahead/activate-suggestion-next","^6","re_com/typeahead.cljs","^:",32,"~:method-params",["^1Y",[["~$p__66533"]]],"~:protocol-impl",null,"~:arglists-meta",["^1Y",[null,null]],"^8",1,"~:variadic?",false,"^7",115,"~:ret-tag",["^U",[null,"~$clj","~$any"]],"^9",115,"~:max-fixed-arity",1,"~:fn-var",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C","^5D"]]]]]]]],"~$search-data-source!",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",175,"^8",8,"^9",175,"^:",27,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["~$data-source","~$state-atom","~$text"]]]]],"~:doc","Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n  (asynchronously, if `data-source` does not return a truthy value)."],"^5>",true,"^V","~$re-com.typeahead/search-data-source!","^6","re_com/typeahead.cljs","^:",27,"^5F",["^1Y",[["^5Q","^5R","^5S"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",175,"^5K",["^U",[null,"^5M"]],"^9",175,"^5N",3,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5Q","^5R","^5S"]]]]],"^5T","Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n  (asynchronously, if `data-source` does not return a truthy value)."],"~$input-text-will-blur",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",142,"^8",8,"^9",142,"^:",28,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^5B",["^1H","~$displaying-suggestion?","~$model"],"^21","^5A"]]]]]],"^5T","Update state when the `input-text` is about to lose focus."],"^5>",true,"^V","~$re-com.typeahead/input-text-will-blur","^6","re_com/typeahead.cljs","^:",28,"^5F",["^1Y",[["~$p__66556"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",142,"^5K",["^U",["^5L","^5M","~$clj-nil"]],"^9",142,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^5B",["^1H","^5W","^5X"],"^21","^5A"]]]]]],"^5T","Update state when the `input-text` is about to lose focus."],"~$make-typeahead-state",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",19,"^8",8,"^9",19,"^:",28,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","~$args","^5B",["~$on-change","~$rigid?","~$change-on-blur?","~$immediate-model-update?","^5Q","~$suggestion-to-string","~$debounce-delay","^5X"]]]]]]],"^5T","Return an initial value for the typeahead state, given `args`."],"^5>",true,"^V","~$re-com.typeahead/make-typeahead-state","^6","re_com/typeahead.cljs","^:",28,"^5F",["^1Y",[["~$p__66452"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",19,"^5K",["^U",["^5M","~$cljs.core/IMap"]],"^9",19,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^61","^5B",["^62","^63","^64","^65","^5Q","^66","^67","^5X"]]]]]]],"^5T","Return an initial value for the typeahead state, given `args`."],"~$event-displays-suggestion?",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",57,"^8",8,"^9",57,"^:",34,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^64"]],"~$event"]]]]],"^5T","Should `event` cause the `input-text` value to be used to show the active suggestion?"],"^5>",true,"^V","~$re-com.typeahead/event-displays-suggestion?","^6","re_com/typeahead.cljs","^:",34,"^5F",["^1Y",[["~$p__66473","^6<"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",57,"^9",57,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^64"]],"^6<"]]]]],"^5T","Should `event` cause the `input-text` value to be used to show the active suggestion?"],"~$external-model-changed",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",162,"^8",8,"^9",162,"^:",30,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","~$new-value"]]]]],"^5T","Update state when the external model value has changed."],"^5>",true,"^V","~$re-com.typeahead/external-model-changed","^6","re_com/typeahead.cljs","^:",30,"^5F",["^1Y",[["^5A","^6@"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",162,"^5K",["^U",["^5L","^5["]],"^9",162,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","^6@"]]]]],"^5T","Update state when the external model value has changed."],"~$clear-suggestions",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",84,"^8",8,"^9",84,"^:",25,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A"]]]]]],"^5>",true,"^V","~$re-com.typeahead/clear-suggestions","^6","re_com/typeahead.cljs","^:",25,"^5F",["^1Y",[["^5A"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",84,"^5K",["^U",["^5L","^5["]],"^9",84,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A"]]]]]],"~$event-updates-model?",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",45,"^8",8,"^9",45,"^:",28,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^64","^63","^65"]],"^6<"]]]]],"^5T","Should `event` update the `typeahead` `model`?"],"^5>",true,"^V","~$re-com.typeahead/event-updates-model?","^6","re_com/typeahead.cljs","^:",28,"^5F",["^1Y",[["~$p__66468","^6<"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",45,"^9",45,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^64","^63","^65"]],"^6<"]]]]],"^5T","Should `event` update the `typeahead` `model`?"],"~$activate-suggestion-by-index",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",89,"^8",8,"^9",89,"^:",36,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C"]],"~$index"]]]]],"^5T","Make the suggestion at `index` the active suggestion"],"^5>",true,"^V","~$re-com.typeahead/activate-suggestion-by-index","^6","re_com/typeahead.cljs","^:",36,"^5F",["^1Y",[["~$p__66513","^6H"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",89,"^5K",["^U",[null,"^5L","^5M"]],"^9",89,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C"]],"^6H"]]]]],"^5T","Make the suggestion at `index` the active suggestion"],"~$reset-typeahead",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",127,"^8",8,"^9",127,"^:",23,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A"]]]]]],"^5>",true,"^V","~$re-com.typeahead/reset-typeahead","^6","re_com/typeahead.cljs","^:",23,"^5F",["^1Y",[["^5A"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",127,"^5K",["^U",["^5L","^5M"]],"^9",127,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A"]]]]]],"~$choose-suggestion-by-index",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",98,"^8",8,"^9",98,"^:",34,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C"]],"^6H"]]]]],"^5T","Choose the suggestion at `index`"],"^5>",true,"^V","~$re-com.typeahead/choose-suggestion-by-index","^6","re_com/typeahead.cljs","^:",34,"^5F",["^1Y",[["~$p__66521","^6H"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",98,"^5K",["^U",["^5L","^5["]],"^9",98,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C"]],"^6H"]]]]],"^5T","Choose the suggestion at `index`"],"~$activate-suggestion-prev",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",121,"^8",8,"^9",121,"^:",32,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C","^5D"]]]]]]]],"^5>",true,"^V","~$re-com.typeahead/activate-suggestion-prev","^6","re_com/typeahead.cljs","^:",32,"^5F",["^1Y",[["~$p__66541"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",121,"^5K",["^U",[null,"^5L","^5M"]],"^9",121,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5C","^5D"]]]]]]]],"~$wrap",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",113,"^8",8,"^9",113,"^:",12,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^6H","~$count"]]]]]],"^5>",true,"^V","~$re-com.typeahead/wrap","^6","re_com/typeahead.cljs","^:",12,"^5F",["^1Y",[["^6H","^6T"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",113,"^5K","~$number","^9",113,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^6H","^6T"]]]]]],"~$debounce",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",316,"^8",8,"^9",316,"^:",16,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["~$in","~$ms"]]]]],"^5T","Return a channel which will receive a value from the `in` channel only\n  if no further value is received on the `in` channel in the next `ms` milliseconds."],"^5>",true,"^V","~$re-com.typeahead/debounce","^6","re_com/typeahead.cljs","^:",16,"^5F",["^1Y",[["^6X","^6Y"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",316,"^5K","^5M","^9",316,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^6X","^6Y"]]]]],"^5T","Return a channel which will receive a value from the `in` channel only\n  if no further value is received on the `in` channel in the next `ms` milliseconds."],"~$typeahead",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",252,"^8",7,"^9",252,"^:",16,"^5?",["^1Y",["^5@",["^1Y",[["~$&",["^ ","^5B",[],"^21","^61"]]]]]],"^5T","typeahead reagent component","~:top-fn",["^ ","^5J",true,"~:fixed-arity",0,"^5N",0,"^5F",[["^1Y",[["^ ","^5B",[],"^21","^61"]]]],"^5?",["^1Y",[["~$&",["^ ","^5B",[],"^21","^61"]]]],"^5I",["^1Y",[null]]]],"^V","~$re-com.typeahead/typeahead","^6","re_com/typeahead.cljs","^:",16,"^70",["^ ","^5J",true,"^71",0,"^5N",0,"^5F",[["^1Y",[["^ ","^5B",[],"^21","^61"]]]],"^5?",["^1Y",[["~$&",["^ ","^5B",[],"^21","^61"]]]],"^5I",["^1Y",[null]]],"^5F",[["^1Y",[["^ ","^5B",[],"^21","^61"]]]],"^5H",null,"^71",0,"^5I",["^1Y",[null]],"^8",1,"^5J",true,"~:methods",[["^ ","^71",0,"^5J",true,"~:tag","~$function"]],"^7",252,"^5K","^5M","^9",252,"^5N",0,"^5O",true,"^5?",["^1Y",[["~$&",["^ ","^5B",[],"^21","^61"]]]],"^5T","typeahead reagent component"],"~$input-text-on-change!",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",196,"^8",8,"^9",196,"^:",29,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","~$new-text"]]]]],"^5T","Update state in response to `input-text` `on-change`, and put text on the `c-input` channel"],"^5>",true,"^V","~$re-com.typeahead/input-text-on-change!","^6","re_com/typeahead.cljs","^:",29,"^5F",["^1Y",[["^5R","^77"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",196,"^5K",["^U",[null,"^5M"]],"^9",196,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","^77"]]]]],"^5T","Update state in response to `input-text` `on-change`, and put text on the `c-input` channel"],"~$update-model",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",70,"^8",8,"^9",70,"^:",20,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^62"]],"^6@"]]]]],"^5T","Change the `typeahead` `model` value to `new-value`"],"^5>",true,"^V","~$re-com.typeahead/update-model","^6","re_com/typeahead.cljs","^:",20,"^5F",["^1Y",[["~$p__66480","^6@"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",70,"^5K",["^U",["^5L","^5M"]],"^9",70,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^62"]],"^6@"]]]]],"^5T","Change the `typeahead` `model` value to `new-value`"],"~$display-suggestion",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",76,"^8",8,"^9",76,"^:",26,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^66"]],"~$suggestion"]]]]],"^5T","Change the `input-text` `model` to the string representation of `suggestion`"],"^5>",true,"^V","~$re-com.typeahead/display-suggestion","^6","re_com/typeahead.cljs","^:",26,"^5F",["^1Y",[["~$p__66505","^7="]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",76,"^5K",["^U",[null,"^5L","^5M"]],"^9",76,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^66"]],"^7="]]]]],"^5T","Change the `input-text` `model` to the string representation of `suggestion`"],"~$search-data-source-loop!",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",183,"^8",8,"^9",183,"^:",32,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","~$c-search"]]]]],"^5T","For every value arriving on the `c-search` channel, call `search-data-source!`."],"^5>",true,"^V","~$re-com.typeahead/search-data-source-loop!","^6","re_com/typeahead.cljs","^:",32,"^5F",["^1Y",[["^5R","^7A"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",183,"^5K","^5M","^9",183,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","^7A"]]]]],"^5T","For every value arriving on the `c-search` channel, call `search-data-source!`."],"~$typeahead-args-desc",["^ ","^V","~$re-com.typeahead/typeahead-args-desc","^6","re_com/typeahead.cljs","^7",229,"^8",1,"^9",229,"^:",25,"^5",["^ ","^6","re_com/typeahead.cljs","^7",229,"^8",6,"^9",229,"^:",25],"^74","~$cljs.core/IVector"],"~$change-data-source",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",154,"^8",8,"^9",154,"^:",26,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","^5Q"]]]]],"^5T","Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n  came from the old `data-source`."],"^5>",true,"^V","~$re-com.typeahead/change-data-source","^6","re_com/typeahead.cljs","^:",26,"^5F",["^1Y",[["^5A","^5Q"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",154,"^5K",["^U",["^5L","^5M"]],"^9",154,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","^5Q"]]]]],"^5T","Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n  came from the old `data-source`."],"~$got-suggestions",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",134,"^8",8,"^9",134,"^:",23,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","^5C"]]]]],"^5T","Update state when new suggestions are available"],"^5>",true,"^V","~$re-com.typeahead/got-suggestions","^6","re_com/typeahead.cljs","^:",23,"^5F",["^1Y",[["^5A","^5C"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",134,"^5K",["^U",["^5L","^5M"]],"^9",134,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5A","^5C"]]]]],"^5T","Update state when new suggestions are available"],"~$input-text-on-key-down!",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",208,"^8",8,"^9",208,"^:",31,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","^6<"]]]]]],"^5>",true,"^V","~$re-com.typeahead/input-text-on-key-down!","^6","re_com/typeahead.cljs","^:",31,"^5F",["^1Y",[["^5R","^6<"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",208,"^5K",["^U",[null,"~$boolean","^5M"]],"^9",208,"^5N",2,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[["^5R","^6<"]]]]]],"~$choose-suggestion-active",["^ ","^5=",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",108,"^8",8,"^9",108,"^:",32,"^5>",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5D"]]]]]]]],"^5>",true,"^V","~$re-com.typeahead/choose-suggestion-active","^6","re_com/typeahead.cljs","^:",32,"^5F",["^1Y",[["~$p__66524"]]],"^5H",null,"^5I",["^1Y",[null,null]],"^8",1,"^5J",false,"^7",108,"^5K",["^U",[null,"^5L","^5M","^5["]],"^9",108,"^5N",1,"^5O",true,"^5?",["^1Y",["^5@",["^1Y",[[["^ ","^21","^5A","^5B",["^5D"]]]]]]]]],"^1<",["^ ","^N","^N","^P","^P","^S","^S","^15","^15","^10","^11","^11","^11","^17","^17"],"~:cljs.analyzer/constants",["^ ","^1:",["^U",["~:description","~:_on-change","~:waiting?","~:children","~:suggestion-to-string","~:align","~:key","~:placeholder","~:displaying-suggestion?","~:input-text","~:else","~:_suggestion-to-string","~:render-suggestion","~:default","~:on-focus","~:suggestion-active-index","^V","~:rigid?","~:width","~:on-blur","~:data-source","~:recur","~:type","~:input-text-blurred","~:immediate-model-update?","~:_rigid?","~:on-mouse-down","~:size","~:center","~:small","~:style","~:input-text-changed","~:_change-on-blur?","~:span.bold","~:debounce-delay","~:_immediate-model-update?","~:suggestion-activated","~:status","~:c-search","~:class","~:change-on-blur?","~:suggestions","~:code","~:position","~:validate-fn","~:c-input","~:br","~:on-mouse-over","~:child","~:on-change","~:on-key-down","~:disabled?","~:status-icon?","~:external-model","~:always","~:required","~:height","~:span","~:status-tooltip","~:model","~:_debounce-delay","~:attr"]],"~:order",["^8U","^85","^8L","^8<","^88","^7U","^8F","^93","^7S","^7Y","^7Z","^8J","^8M","^8Q","^8Y","^84","^8Z","^8H","^8C","^8;","^7[","^89","^V","^8[","^8:","^8P","^7Q","^91","^8N","^82","^81","^8I","^8X","^92","^7X","^86","^90","^8W","^8K","^8B","^95","^8R","^8E","^94","^7R","^80","^8=","^8D","^8G","^7T","^8V","^83","^87","^8O","^8T","^7V","^8@","^8?","^8A","^8S","^8>","^7W"]],"^22",["^ ","^1<",["^U",[]],"^1;",["^U",[]]],"^23",["^ "],"^24",["^16","^15","^17","^19","^12","^13","^14","^S","^11","^18"]],"^Y","^W","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^2B",[["^99","~:static-fns"],true,["^99","~:elide-asserts"],false,["^99","~:optimize-constants"],null,["^99","^29"],null,["^99","~:external-config"],null,["^99","~:tooling-config"],null,["^99","~:emit-constants"],null,["^99","~:load-tests"],null,["^99","~:form-size-threshold"],null,["^99","~:infer-externs"],true,["^99","^2;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^99","~:fn-invoke-direct"],null,["^99","~:source-map"],"/dev/null"]]]